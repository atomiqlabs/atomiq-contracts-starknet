use crate::byte_array::{ByteArrayReader, ByteArrayReaderTrait};
use crate::varint::{ByteArrayVarintReader, ByteArrayVarintReaderTrait};

#[derive(Drop)]
pub struct BitcoinTxOutput {
    pub data: @ByteArray,
    pub value_offset: usize,
    pub script_offset: usize,
    pub script_length: usize
}

#[generate_trait]
pub impl BitcoinTxOutputImpl of BitcoinTxOutputTrait {
    fn get_value(self: @BitcoinTxOutput) -> u64 {
        (*self.data).read_u64_le(*self.value_offset)
    }

    fn get_script_hash(self: @BitcoinTxOutput) -> felt252 {
        let script_offset = *self.script_offset;
        (*self.data).hash_poseidon_range(script_offset, script_offset + *self.script_length)
    }

    fn from_byte_array(data: @ByteArray, ref offset: usize) -> BitcoinTxOutput {
        //value
        let value_offset = offset;
        offset += 8;
        
        let (_script_length, bytes_read) = data.read_varint(offset);
        let script_length: usize = _script_length.try_into().unwrap();
        offset += bytes_read;
        //output script
        let result = BitcoinTxOutput {
            data: data,
            value_offset: value_offset,
            script_offset: offset,
            script_length: script_length
        };
        offset += script_length;
    
        result
    }
}

#[derive(Drop)]
pub struct BitcoinTxInput {
    pub data: @ByteArray,
    pub initial_offset: usize,
    pub script_offset: usize,
    pub script_length: usize
}

#[generate_trait]
pub impl BitcoinTxInputImpl of BitcoinTxInputTrait {
    fn get_utxo(self: @BitcoinTxInput) -> (u256, u32) {
        ((*self.data).read_u256(*self.initial_offset), (*self.data).read_u32_le(*self.initial_offset+32))
    }
    
    fn get_script_hash(self: @BitcoinTxInput) -> felt252 {
        let script_offset = *self.script_offset;
        (*self.data).hash_poseidon_range(script_offset, script_offset + *self.script_length)
    }

    fn get_n_sequence(self: @BitcoinTxInput) -> u32 {
        (*self.data).read_u32_le(*self.script_offset+*self.script_length)
    }

    fn from_byte_array(data: @ByteArray, ref offset: usize) -> BitcoinTxInput {
        //utxo txId
        let initial_offset = offset;
        offset += 36;
        
        let (_script_length, bytes_read) = data.read_varint(offset);
        let script_length: usize = _script_length.try_into().unwrap();
        offset += bytes_read;
        //input script
        let result = BitcoinTxInput {
            data: data,
            initial_offset: initial_offset,
            script_offset: offset,
            script_length: script_length
        };
        offset += script_length;
    
        //nSequence
        offset += 4;
    
        result
    }
}

#[derive(Drop)]
pub struct BitcoinTransaction {
    data: @ByteArray,
    ins: Span<BitcoinTxInput>,
    outs: Span<BitcoinTxOutput>
}

#[generate_trait]
pub impl BitcoinTransactionImpl of BitcoinTransactionTrait {
    fn get_version(self: @BitcoinTransaction) -> u32 {
        (*self.data).read_u32_le(0)
    }
    
    fn get_locktime(self: @BitcoinTransaction) -> u32 {
        let data = *self.data;
        data.read_u32_le(data.len() - 4)
    }

    fn get_in(self: @BitcoinTransaction, index: usize) -> Option<Box<@BitcoinTxInput>> {
        (*self.ins).get(index)
    }

    fn get_out(self: @BitcoinTransaction, index: usize) -> Option<Box<@BitcoinTxOutput>> {
        (*self.outs).get(index)
    }

    fn get_hash(self: @BitcoinTransaction) -> [u32; 8] {
        (*self.data).hash_dbl_sha256()
    }

    fn from_byte_array(data: @ByteArray) -> BitcoinTransaction {
        let (input_count, bytes_read) = data.read_varint(4);
    
        //Check that segwit flag is not set (we only accept non-segwit transactions, or transactions with segwit data stripped)
        if input_count==0 && bytes_read==1 && data.at(5).unwrap()==0x01 {
            panic(array!['bitcointx: witness not stripped']);
        }
    
        let mut offset = 4 + bytes_read;
    
        let mut ins: Array<BitcoinTxInput> = array![];
        for _ in 0..input_count {
            ins.append(BitcoinTxInputImpl::from_byte_array(data, ref offset));
        };
    
        let (output_count, bytes_read) = data.read_varint(offset);
        offset += bytes_read;
    
        let mut outs: Array<BitcoinTxOutput> = array![];
        for _ in 0..output_count {
            outs.append(BitcoinTxOutputImpl::from_byte_array(data, ref offset));
        };

        offset += 4;
    
        assert(offset==data.len(), 'bitcointx: more data');
    
        BitcoinTransaction {
            ins: ins.span(),
            outs: outs.span(),
            data
        }
    }
}

#[cfg(test)]
mod tests {
    use super::*;

    //Generated by scripts/tests_unit/bitcoin_tx.js

    #[test]
    fn test_real_txs() {
        // Transaction ID: a05752054bce02038df644aac89b3bc955ab0fa9b48a828f2b865b581fbd2698
        let mut serialized_byte_array = array![0x2, 0x0200000001c4f79b244a6769289e2fa374b4adfe5ea848338dd1a88fd5bb23, 0x3bc7cb24eea65e01000000fffffffd014a01000000000000160014d325c524, 0x294562374c6c164403db47a16d23c73500000000, 0x14].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 2);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x9826bd1f, 0x585b862b, 0x8f828ab4, 0xa90fab55, 0xc93b9bc8, 0xaa44f68d, 0x0302ce4b, 0x055257a0]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0xc4f79b244a6769289e2fa374b4adfe5ea848338dd1a88fd5bb233bc7cb24eea6, 350));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x2272be0f580fd156823304800919530eaa97430e972d7213ee13f4fbf7a5dbc);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xfdffffff);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 330);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x7c3ae63b9b10b20433d6f918b9df2a573fab26cd59997216703b22b5e7a0fa7);
        assert_eq!(result.get_out(1).is_none(), true);

        // Transaction ID: a0d24d046745da03295ca015669a99ce2f7f704511e40cfeb29c81e2e52d3f6f
        let mut serialized_byte_array = array![0x3, 0x0100000001c6c377dc9ef0c5b23679c9b4d6bc6c58980153a624ac09201398, 0xdbd079dd99410100000000ffffffff0238c101000000000017a9140a02ad96, 0xa6da9c7e3ea18d19f3d49dd8c207be8e87f81f0000000000001600145dedfd, 0xfc4ece553a179165dd45b9418baed8dbc700000000, 0x15].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x6f3f2de5, 0xe2819cb2, 0xfe0ce411, 0x45707f2f, 0xce999a66, 0x15a05c29, 0x03da4567, 0x044dd2a0]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0xc6c377dc9ef0c5b23679c9b4d6bc6c58980153a624ac09201398dbd079dd9941, 1));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x2272be0f580fd156823304800919530eaa97430e972d7213ee13f4fbf7a5dbc);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 115000);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x7a8921c833c8fa73fce72f75a5459dd01f0b99b49ad4fb2008b371d019f32bd);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 8184);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x208e6831e02f7a3d10563c5292eb7078a55f1b76cf03325621313215712e054);
        assert_eq!(result.get_out(2).is_none(), true);

        // Transaction ID: 0927b85c5dc2e592c40aee43227eca770c0838323f200298908f8b29781aec78
        let mut serialized_byte_array = array![0x10, 0x010000000394a47d9ed2622edbec3dbe6a8059cbeee37e059d0dabc0ec550f, 0xbaaedada61e8d70000006a47304402202d59aa2d707485136fa35840cecacb, 0x7845be2e323c93a20630bb77fd1dd642ce0220432f65cc3cbee12278721e75, 0xb81de959050158f6fcef3177f349c319bb0d975f012103e1f6f188d5ef8f1a, 0xef24ab1f5a98579eb25baf107c18009ed17b0408257b2bf5ffffffffd2e01a, 0x9e064b53990c7de844eb3a8cebba25cc253f1d025d246a2c5f8641b1e60100, 0x00006a47304402204ad20d4145e5d2fde935ae3f41c7097697b8f6f6e98d7b, 0x7bb9ea9021d7e64d98022066277bce671d7c7dc9bda2ea06f9d11cb49876e1, 0x7f3bb9f5496cc55c179e5fa501210298eb0832eacee480e6518ee176506708, 0x9068c5065341d5a761d8cd4c1ffa397dffffffff2065de52d932097d310332, 0xac6cc2570f2bdfbfd175196050c165fe8e915b93f4000000006a4730440220, 0x506f7382f211cda0d017e2513f6214cdd6f6d98e974fe75498e14a118b8142, 0x7a02200d9b4c555766e0a17d2ee0da6fb20e216de83411d2ad34b6fe8ed3c5, 0xb24e88900121022d5e64a85b38a387fb609f17a9370a7317000544c562c45b, 0x2fedb126ddc0bc93ffffffff0240eb1d00000000001976a914a50f483d9572, 0xf378023951e40b638f9fe5edf35488ac0bbc2300000000001976a914656956, 0xcd6de5a5492e04fec2e8ec946ada149e6f88ac00000000, 0x17].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x78ec1a78, 0x298b8f90, 0x9802203f, 0x3238080c, 0x77ca7e22, 0x43ee0ac4, 0x92e5c25d, 0x5cb82709]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x94a47d9ed2622edbec3dbe6a8059cbeee37e059d0dabc0ec550fbaaedada61e8, 215));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x62d19a51b299102674b8197bbc3c9b8128c2bcf39bf9808acf34438ceb5db00);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).unwrap().unbox().get_utxo(), (0xd2e01a9e064b53990c7de844eb3a8cebba25cc253f1d025d246a2c5f8641b1e6, 1));
        assert_eq!(result.get_in(1).unwrap().unbox().get_script_hash(), 0x72e61c006b32764bfe4ebb35ca3aebe796e788df30a0ff2083774b875b60f5a);
        assert_eq!(result.get_in(1).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(2).unwrap().unbox().get_utxo(), (0x2065de52d932097d310332ac6cc2570f2bdfbfd175196050c165fe8e915b93f4, 0));
        assert_eq!(result.get_in(2).unwrap().unbox().get_script_hash(), 0xd0a5cf5d9134c5961a22a065b72256d0bdb781f10fefc42b7c034cd2e6f01a);
        assert_eq!(result.get_in(2).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(3).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 1960768);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0xb8664fe1f7998be66da95500f68e1a36397955e49b9dde94b1a214bed4f67f);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 2341899);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x314caed22f0bd2e6ae29a11a234254cf42fa449caa88b98c17091f2bf81da4d);
        assert_eq!(result.get_out(2).is_none(), true);

        // Transaction ID: f141d85905960854a55f2adf037ce5c04a3bb3390caeae1fc92502425dacc512
        let mut serialized_byte_array = array![0x4, 0x01000000010000000000000000000000000000000000000000000000000000, 0x000000000000ffffffff070415112a1c0107ffffffff0100f2052a01000000, 0x434104f44915f738042139f4061f67e3b7f0f4526279379c58137291773afb, 0x7c50ee86d74eebb13cfa4825aae5a0cb51bff7a2dee1fc90e434ce8c64f6d6, 0xb7a6b69034ac00000000, 0xa].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x12c5ac5d, 0x420225c9, 0x1faeae0c, 0x39b33b4a, 0xc0e57c03, 0xdf2a5fa5, 0x54089605, 0x59d841f1]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x0000000000000000000000000000000000000000000000000000000000000000, 0xFFFFFFFF));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x57d2123afb992be2355236685076d38b8f6511c44b4bea2dd678664bc275a88);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 5000000000);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x5adc3a90a302aec6d9f79319d774df41ac825f76cb8004fcc77b8ee193f5e8);
        assert_eq!(result.get_out(1).is_none(), true);

        // Transaction ID: ae834a158964e9a42cb65cd789b643039f03191b876edc513961dd072dd2d1ec
        let mut serialized_byte_array = array![0x5, 0x0100000001941648a698f2070fb7a6ff1e2d13e5d443e7ffc04e2d5bd9adf3, 0x29bab8010cc10100000000ffffffff020000000000000000536a4c50000e37, 0x7e000254711ae4e701acf145bd4523e875ab38da25dbf8a45d52ce76b72a9a, 0x18b7e80b6b1ab90a47a5cc5c64e01673321b5e5b2caa07043c2f81c2d40e88, 0x8da40f044350bc98101ecd96acfc200d940900000000001600146211ce255e, 0xd037b110e90881fb30eb575177525200000000, 0x13].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0xecd1d22d, 0x07dd6139, 0x51dc6e87, 0x1b19039f, 0x0343b689, 0xd75cb62c, 0xa4e96489, 0x154a83ae]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x941648a698f2070fb7a6ff1e2d13e5d443e7ffc04e2d5bd9adf329bab8010cc1, 1));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x2272be0f580fd156823304800919530eaa97430e972d7213ee13f4fbf7a5dbc);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 0);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x97bce7ea04e4b4a83d5c6f1e1f043def4653589775d09d11543022a7548c27);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 627725);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x73710f5830976b4985691c585a5d4c91fbddbd9ba3a4d2ce885de11fb112cef);
        assert_eq!(result.get_out(2).is_none(), true);

        // Transaction ID: c896dae78d8659cd718b73c078049e6f347327d4b6f3e77137b692a934bb1b27
        let mut serialized_byte_array = array![0x3, 0x020000000142e16ead97b67df43fbd250962fa3c0685bc8cc122615694c87f, 0xc0454014c65b0000000000ffffffff0241ee1f00000000001976a9149f1f3e, 0x710523d55db73242b7eac532f1678643e588acfa348a000000000016001467, 0x0f263cfeec57d7b8e2eba4871552b2a1d4b27800000000, 0x17].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 2);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x271bbb34, 0xa992b637, 0x71e7f3b6, 0xd4277334, 0x6f9e0478, 0xc0738b71, 0xcd59868d, 0xe7da96c8]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x42e16ead97b67df43fbd250962fa3c0685bc8cc122615694c87fc0454014c65b, 0));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x2272be0f580fd156823304800919530eaa97430e972d7213ee13f4fbf7a5dbc);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 2092609);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x46274676f33be7b0a7e2ce8c1a8516f8430cae8725b98b1cb388607421d958d);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 9057530);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x1e32b584f0795ed83db8578a689b1d80f91495d39240f63438cfa8a90fb5598);
        assert_eq!(result.get_out(2).is_none(), true);

        // Transaction ID: edd5290f4cd60b92fdeed2ffbf681b07a48967359c2d68cc99553aa3baa2eb16
        let mut serialized_byte_array = array![0x7, 0x0100000001f88c9d91ac0c22bcbb8d008fa5a376e0649e91fa7b6421f5f9b9, 0x8a2bbce505ae040000006b483045022100f2a99459974e8bbfd6c74f99581f, 0x5c2d3f741f7eabc7aabebc8f562fd72782ac02203c839b31aec1d7e8180fe3, 0x37c01aba15fe9911b0970ad3bb2583c3c8ef528a110121029f3e6aef3ee519, 0x7a8e7124ac34d0cce49c7a29681aec41fbffe62dca8222ff28ffffffff0230, 0x6a0401000000001976a9148abf543aa0ed40294f00a4beb0d6b243c7699d0a, 0x88ace8879a00000000001976a9145a69e32fc6b3ea8e5e3aa9d7be6e78b844, 0xc03b8488ac00000000, 0x9].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x16eba2ba, 0xa33a5599, 0xcc682d9c, 0x356789a4, 0x071b68bf, 0xffd2eefd, 0x920bd64c, 0x0f29d5ed]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0xf88c9d91ac0c22bcbb8d008fa5a376e0649e91fa7b6421f5f9b98a2bbce505ae, 4));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x17aa409f36a37239662b9715ff1af72a27b37543797ccaa91b4868c7b34ee21);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 17066544);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x10aaeac0361d0f676968894fd06e488c68f308bdbcc82e26b684bfb9bce0334);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 10127336);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x3e76dbdb9b062140e6e1c47718820757ced4781048b7441dc688ed4ef16ebbb);
        assert_eq!(result.get_out(2).is_none(), true);

        // Transaction ID: 84de3fc474ee3b1e52a3e1ad5ec3a5d282f0948d78aa151e26892e8ea0029af9
        let mut serialized_byte_array = array![0x94, 0x010000001fbe4bf19cb77d472238ef73cbba475e7c27f8e37da7376c807911, 0xa79db94310df000000006a473044022053caf073e47c1ee80ff62e0a0bd40c, 0xda85b905b0a84d058f134a54d86ed3e75e02207e37011ae66ce49dbf7a33d6, 0xc28ba637b14b4d6da34712f08cfccbff231509b601210361ce8a2d03a90d9c, 0xe3f810cfb2cd40fb62714994cf7e9e53c2eb5b18ad5a059cfffffffffd33f9, 0xf3dd6ef2dfbc332be6119af26716e31b16afc29f48d0cfb7c2062d05680000, 0x00006a473044022029ecd6635e5865a03bac15a070202104441a871f6d2cbb, 0x7b7871dc3be8f7fbe6022042528acc67e807b2b4bc8070f8f675a5b6cbb2f1, 0x1f8cc4c2b99800a5ea49d5f801210309c8d746364cfd2c9d2df78b4407b91b, 0x5e7f14fb4fb74acf2d7e51e93fe7edfdfffffffffbbfe201aa84916646c9c0, 0xad72e75af54a240052f9b4bf1c52cfd24c8b2d1be9000000006a4730440220, 0x3d460e072a52459b91c507a44019466d5bd323d6ac8c1d5cfd12ae3e956238, 0x8a02207829c8492caec42c53d57cb6ced051f6938314a190e3979600518dcf, 0xd1e882cc012102fa8dac92cc4dcc9eeed8f17b690272f5cfa51724f1d57d14, 0xe9f152b133b81a3bffffffff6a62953ee1c07a70fc38ce43c406dadf33181b, 0x26daacf15eefa0ec7e483c96f3000000006a47304402201b6d2e933d326aac, 0x7903c784b8f232b65f266a87327c6ca18a0d54734474799f02203afe1194a3, 0xa0dd46db00b1104a9f3998bc1d8f91306edfa1e968f12dccad9df2012103f0, 0x035689a60060f9cbb6fbe85271f9b1e30422129f1efbfbe63b5cb0a654afbf, 0xffffffff1d60480c03e2ca510960a3c82aed006a20639bca2fe979590c49da, 0x891852283f030000006b483045022100b3cf009749c73ec5abbf87a63c0dcb, 0x7d0b867ca71d357a93acbfe0b50ffe57e602202ea1b080d3db06f999ef4924, 0x29b3ffd765d6a25ac54f476f2026701b137dc726012103551b1b7bb19cc17b, 0x7af4e8403ed211d59d1922531f6008b12091ce45876a815bffffffff9caafb, 0x98a67d051eac32dfdcf4336d678d7984328cb3ae65bd218d8d0ae2ff1e0100, 0x00006a473044022038da0027f65a617274fe905e23e854c9394d82fad7767e, 0xf7ca38ad0b4031763802206a8e0eb66c9f9524b62854322ab75c5fef23e20f, 0x85ab31cdfb656c655eebb923012103a2fc0e7d3eb693f4ca972b7b6a1da878, 0x6c9d7c77f03f3adbbe5fe1e87f07e85dffffffffbe2dea9a14a4f6bd26c460, 0x44a32628bdfb126d13bcb8a53a72c96cab7b5d9a6b1e0000006b4830450221, 0x0088773c148e9c3894507e7a7242beb49d558bf67c68d4e5e039259d6edc72, 0xfa1f022050b9dd648011f35a627cc5dc07462cd93491a437b5eefeb3fc2557, 0xabdb96daf2012103a81b4fd260beadebe56da2d2889ce5cd7dee6314436853, 0x3ef76147d80e2bb3cdffffffff759fc8a1d3738b19e94446130b45010d52b2, 0x666191378a833b191f128894bbcd000000006b483045022100b3a9c89ee15c, 0xa5a1ed648db9fe1cb361089d0b251ad4f9e550bf5bc3a2dd343d02200379ac, 0xad9a1529b0f5ef584d22bcbd70033231023879e43a957fb89b3a5728ce0121, 0x02d2378745710b67cdade0dfd4549947e7541543219ac12adfde09c1b725e5, 0x6a94ffffffffd7f2668e012a7a65f6213979819d0f22698110db1a3abbad42, 0x54c75098d079db000000006a473044022047e00aa59d974903c584ad329d25, 0x1b61078694e8a7c5cac8bc821bcf77026f9d022006e1058b38af6f51a45ea9, 0x77c7cd21f71a738f32d6aa7ea47fe5e65efec041df01210318938ad3f50f34, 0x041375451695952d8864846b9ba28375e36c65a956263f5a00ffffffff3a8a, 0x9b421a576e387b21ccb42de1a09b841df7b201c0fa8dcdcd93db873dfcb102, 0x0000006a47304402205b7715e1849c16c97c5c10eea10756db012272e4f4a9, 0xd3a18fabaab98a0e56a302202fd894e17482def3f95562123835fcce14e6d5, 0x1b9fdc659c0f178762e8bbf6380121026c432848257852dafd313f765d4284, 0xe026018d99205b6af2c23206bee9c56465ffffffff550d37ec0ae8fb7cd7fd, 0xa0460934ee817b451c4351b713d8611dc55656e91fe9010000006a47304402, 0x204bd1ba3a55ce634b60a9b9cbc4ee1f81bc49e466a3f6334c1f0a9cb3c310, 0x2b500220219dbc8f6f55c782a0a1597651ca9c6604d537d0f315f12843fda1, 0xc986dc5b29012102ec8e28c1a6bee054bf4f9af473ce653a29afd36a8cf90c, 0xb5c28c8fa241e1f06dffffffffde9a197e9327a24b199715d56ee3b524007c, 0x28b9b6490ac520d7612ba2c02506000000006b483045022100e40591be2e09, 0x175198af447f5e29c5f599cb7339bc5c988e345a08b211e7216802202e58bb, 0x7809f3d4f6374327908631891e19ee85eafc6b1deb8666d5533bb724e40121, 0x030c62aef9bc930b42eccbce2ac65c967ce68e043752ab41d36c1adc530ff6, 0x53d4ffffffff459d2fd5957c9d50592ef3aab04db9e0f1c46eb53d85dcce03, 0x1cfbb60a588758000000006b4830450221009ad6966daf02c7612e0081e72d, 0xab3c79eed6607b4ab01b88ef23c5a4452367630220029175171bd487b0f6b3, 0x0ca8266c4fa5afc2187646530d3e5800085f724dc50201210361ce8a2d03a9, 0x0d9ce3f810cfb2cd40fb62714994cf7e9e53c2eb5b18ad5a059cffffffffeb, 0x0527f3b9271f6d71e5ed854879b2a6914f0e8579276cd39140941ea6cb2903, 0x010000006b4830450221009edf5c04bb7d413417e3294cb7bb1a2b9064cff4, 0x25f5883a0c54b4bca62ff839022041fb77f59adb582fdbd2354e118adc16ed, 0xed24c06273d45985b3ff3d8d3a621e0121026d4d6a80921c10ae494031ed0f, 0x441f674d143defccbff36c64933e864712efa0ffffffff3a7e8d0361a30c3e, 0xe4366c983fbc72a77bde4a968193fc77632f30f2ee39f78e040000006b4830, 0x450221008b69c0d2826581af3c323ae7d4afe9ac28f3f66ec7ecddb9b01fc4, 0xf1abda7b2202202374872312dd776fa6aab49681db075ff4bdc00533456016, 0xaac46d7b5063051f012103a7207c93f12515b0f51fb72af2d0b52a71219391, 0xc0db08f0c37d075ff8749f19ffffffff1e40c706fa84c8bdf2abe8a89870d7, 0xbad1325fa3670fcd02374deb7dad8615a2000000006b483045022100e0e318, 0xe8621f9773e758c52d4123de9d3bdefe4cfe932e8f776818ffef7b58680220, 0x1ffc3a3bfd728286fa10ba5b354e934ae266160094efbd064231d7fe5298df, 0x1d01210386f297c3c6e9ca4b3c127dcd8feed617f8351ef4cde96fc5e12349, 0x237618f97cffffffffe7a2d94edfe3c98e29d7ffdef8fee9b42d199f6ff76b, 0xe2382dcd44cf1ed38e7b000000006a473044022056828f6df1a041fc549264, 0x3e1e9adf83ecf11d2035aa8ac1df11c3a6c32a396702204a1200e0d55ac83b, 0x151fa410c616c97948dcce0be49e4707504b2c1c1d0e530b0121030d8700c8, 0x918f8f45d412676a9cceed74ce4fe86664a2d8ccd3a049d39fdb4eeaffffff, 0xff7c2fa86897a322634d6df4c8d9e4e6cc8b7a49c2bb7cbc9468770202eace, 0x0b39000000006b483045022100a23f373df13a35561762f1075a800be0a83e, 0x57aa7106c806d65a4d7a3b964b82022037c52acb3c9e135d6eaa05e7d0ca1d, 0x3bff7274c68e1c5306a3af79cd28357ffd012103407752f70d5b9370441aba, 0x980240a359af63d02c5b49992fe57fd7794dccbaa1ffffffff483296421df4, 0x37eee5f3d0de84ff7b7349949fa93e28af32e4503245274d4f64000000006b, 0x483045022100f0045d04ebd9997bf5c2bd910b796343344e6627c1df654596, 0xb95b7706aca64a022044efe938a76061859a99a5fed5ea8b75f65e9b35da18, 0x00682758d5a771a8c96c01210318938ad3f50f34041375451695952d886484, 0x6b9ba28375e36c65a956263f5a00ffffffffed94f5a53cf9a153b8d2e694c9, 0xe7383091691c91755f37188c0451bc4d78f92e000000006a47304402205ec0, 0xe7ef0fefaad43005ccf90012b3ad6d2f284ae8b91777a5dc292d6f40303d02, 0x203a600c0a32d4917be60fa2397bd657c3e166367e6721a5dd8222a3f6d3c5, 0x3a7901210361ce8a2d03a90d9ce3f810cfb2cd40fb62714994cf7e9e53c2eb, 0x5b18ad5a059cffffffffd576a44a4b63efacbbdba666935b0d653788f1e528, 0xe5e940ddc734b1df080f3c000000006b483045022100852977535079f13c59, 0x34194718c956853b5811254b87838cdc90ba0ea5af8ca1022023668e2265fd, 0x272f1c14651f951973756a1aa4067696d97c9ead592a72b0e21e012102f1bf, 0xd7cd6e4160ca1feda476b1d2ed34f79294d0c320489642e867bc09f07c81ff, 0xffffffe2db6282875630e46886fab3f8db43d1a910e53c3a6d4c47b2d03328, 0xeb6051f8000000006b483045022100c411ead2e2022a31c79af0cce89a0d36, 0x03a90f94902a18ed59504af7b3b81b9802205c56ae6a90306040baacfd908b, 0x8f65f7cc94d560420b9be941477016f497778b0121030d8700c8918f8f45d4, 0x12676a9cceed74ce4fe86664a2d8ccd3a049d39fdb4eeaffffffff2abe5aab, 0x9b7e9e1b4f246abc7a215e7a9a7a09d7f938c38f005e0db518a73c82000000, 0x006a4730440220317648ef36c170881ec766a2246bd37935b42b8e38b2ed37, 0x509cbbe86b8df84d02202defefcc814a9227c405a34ab1846e30f5b0c5c08e, 0x10049b98d9e661068af7180121030d8700c8918f8f45d412676a9cceed74ce, 0x4fe86664a2d8ccd3a049d39fdb4eeafffffffffdf10216b2e1c6efebc9949e, 0x5a23081df8f6ef5a2c1987a9d77162a787140e6e000000006a473044022014, 0x5f23aad169636fd420383784fe946e08bc6032ddf6c92d34ab6973de2ad6c8, 0x02206661c36fe91de83e53759c0039dc2fd3cd7759babe307f4da576670d88, 0xda7b01012103b3045e0ae18bfbb365b61c44040ef77ceafa0676fb3fa7b2a6, 0xc96439a928d4d4ffffffffe3fc2cce32923df161196208218910e01159cdde, 0x1c0456b97389087916f0e0c8000000006b4830450221009a52f18fe058863a, 0xae4548cec5f784912d587e64897d55dd6fea47f4a60056a502207d9ddd84be, 0xd573b903759223668c24e1c40c715effd634689f75197575ea5a97012102ea, 0x27989a9a9d91ee496293f521db4a8bcafe4b647a26149645705b83afb11ff1, 0xffffffffb5a312bc3daf5a0e128c4b4922bf6b3551a0cc7429915f4f777330, 0x69e3efa7b9000000006b483045022100cb6be7b92b96d2ec471250ecd641c6, 0x931375fac95c54ae7b1d2310b8d1950adf0220476b848e676aa9d892cae3bd, 0xeb8dfef971125f3feb2b7b9ed5765efa5b43e70b01210306379f0f44da39cf, 0x8d2648e5ffe68a3b0a092190b2e9c356cfe1811894a6a7d3ffffffff61aa5b, 0x635a78c06afb415eb31b6ba526301818c38f7888c247bf2980af8a2b450000, 0x00006a47304402204cf5a7de7ef8a4b553bad81543138942709afc043308f0, 0x3fa7838e71f3fe784d02201b1d9ab223dacdd3dcecc39e4b9fcc23c37243a6, 0xe98aa0b558d94b4850bf0df5012103ac3c5cd00573042d3fba04d1bcfce199, 0x0163e60c3ab1755ae667fa24cab0ae81ffffffffc4e9330c724cbad4eeed28, 0xd9603d765f21bad7e3c92e6f1f8e3352c809ace7a0000000006b4830450221, 0x009e4c3e54b0639d42053dea193e2ee9189fc59fb412ed7f4434e9be82e50f, 0x0b8f0220294765d76493df1a9b88208fc2f96054418df9e36d52aa7ceb9e8b, 0x9d2fa8eeb40121030a9e3a3e15affd0c1e0fcb7874d2889b1e198c0e0ee911, 0x954ae1c5795ded7f6affffffff05b6c73f618c6fa7fe1dfaaecd2960f03da5, 0xb7433f001a8f94716965d36892c3000000006b483045022100942d19720644, 0xbde63fc99a1406b9d86b1accde3cc748df78edc242f967948abb02205f14e7, 0x1274ee4052a0653145031984afeb8c786cdf0a9ca7bda96c243ec2a0fc0121, 0x03d8acfd13619acdcddf5d158fd64dc44723ec89c175d7ee06a547d620a544, 0x492dffffffffde6b389b7e30032f6b17196d12fca8144b220c477d5c788011, 0x36c18b7255935c000000006a4730440220322b149cbac0cd2cd5fccd73363a, 0xb4188fee720ed961039be5000858948630bb0220389e991945bb6670e0c12e, 0x1f107bda0928be8914ad2586fcfff0b91170bc619d0121032d0136a44d3c52, 0xa0db63ac1dddac113148b653662f203b01cd1f95ad63f98abeffffffff5527, 0x9a53b60c51b873d083fb63c8b16eefb8f6b6598abe247f270e3cf4aa0a2500, 0x0000006a47304402201440e74438ebfb1994f9aa7df4d50c039e13c508f099, 0x3f520d6e99a52fb5f6de0220575c9988aa7be0727b92fb8e72c870b76b55a9, 0xcb552e7e39d3363e603a33fef501210258cce323d03172a304e66b3856afec, 0x498c1b0e64730882c84394b4149b01f602ffffffff0110c1d1070000000019, 0x76a9149b71ca50a249f283dce5848a6259efdd2e47fa4b88ac00000000, 0x1d].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0xf99a02a0, 0x8e2e8926, 0x1e15aa78, 0x8d94f082, 0xd2a5c35e, 0xade1a352, 0x1e3bee74, 0xc43fde84]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0xbe4bf19cb77d472238ef73cbba475e7c27f8e37da7376c807911a79db94310df, 0));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x34fbc268a434ffbfaaa015e84b956500f8a228f62ccedd6678d6537fcca7c38);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).unwrap().unbox().get_utxo(), (0xfd33f9f3dd6ef2dfbc332be6119af26716e31b16afc29f48d0cfb7c2062d0568, 0));
        assert_eq!(result.get_in(1).unwrap().unbox().get_script_hash(), 0x2eab403563fa33203f192b047443b4ec2253ad69ad8779f41e04bcb894cf300);
        assert_eq!(result.get_in(1).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(2).unwrap().unbox().get_utxo(), (0xfbbfe201aa84916646c9c0ad72e75af54a240052f9b4bf1c52cfd24c8b2d1be9, 0));
        assert_eq!(result.get_in(2).unwrap().unbox().get_script_hash(), 0x262da707a75ee61f76649e211015a9cf2637125a134d2bcab7aab7038162a22);
        assert_eq!(result.get_in(2).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(3).unwrap().unbox().get_utxo(), (0x6a62953ee1c07a70fc38ce43c406dadf33181b26daacf15eefa0ec7e483c96f3, 0));
        assert_eq!(result.get_in(3).unwrap().unbox().get_script_hash(), 0x28427ad58f09135537d237648fe5205ac03338460ac68f64c9721b3b9394d92);
        assert_eq!(result.get_in(3).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(4).unwrap().unbox().get_utxo(), (0x1d60480c03e2ca510960a3c82aed006a20639bca2fe979590c49da891852283f, 3));
        assert_eq!(result.get_in(4).unwrap().unbox().get_script_hash(), 0x145285d5d4f7c39ba6d2ad2ec4770977afbe41eff83183752e9f220a60563ea);
        assert_eq!(result.get_in(4).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(5).unwrap().unbox().get_utxo(), (0x9caafb98a67d051eac32dfdcf4336d678d7984328cb3ae65bd218d8d0ae2ff1e, 1));
        assert_eq!(result.get_in(5).unwrap().unbox().get_script_hash(), 0x15be432c72b3256547c456ad16083cf7e936200e576ffcd27e0f81793bfc89a);
        assert_eq!(result.get_in(5).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(6).unwrap().unbox().get_utxo(), (0xbe2dea9a14a4f6bd26c46044a32628bdfb126d13bcb8a53a72c96cab7b5d9a6b, 30));
        assert_eq!(result.get_in(6).unwrap().unbox().get_script_hash(), 0x58cf6c260ed64672d585b9dee15b4aea8a94ac5c1293078da56fca2bdf60a6a);
        assert_eq!(result.get_in(6).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(7).unwrap().unbox().get_utxo(), (0x759fc8a1d3738b19e94446130b45010d52b2666191378a833b191f128894bbcd, 0));
        assert_eq!(result.get_in(7).unwrap().unbox().get_script_hash(), 0x720f97ef0b7aa4370a517b82f5a9f36ea734ec83912df5ffe1b0c618a38c1fe);
        assert_eq!(result.get_in(7).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(8).unwrap().unbox().get_utxo(), (0xd7f2668e012a7a65f6213979819d0f22698110db1a3abbad4254c75098d079db, 0));
        assert_eq!(result.get_in(8).unwrap().unbox().get_script_hash(), 0x357f15947ba50a4ac76f74cad6abba7957ced2d5d44ba8b28aaa1a30cc7b5b3);
        assert_eq!(result.get_in(8).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(9).unwrap().unbox().get_utxo(), (0x3a8a9b421a576e387b21ccb42de1a09b841df7b201c0fa8dcdcd93db873dfcb1, 2));
        assert_eq!(result.get_in(9).unwrap().unbox().get_script_hash(), 0x58a183824bf20e5340fb924323487cec9982d493697a063a05107636c3f23c4);
        assert_eq!(result.get_in(9).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(10).unwrap().unbox().get_utxo(), (0x550d37ec0ae8fb7cd7fda0460934ee817b451c4351b713d8611dc55656e91fe9, 1));
        assert_eq!(result.get_in(10).unwrap().unbox().get_script_hash(), 0x3a0258dcef5f04473a7581f1f2a4dca79a394bb87010696e3660d28a9a1c52d);
        assert_eq!(result.get_in(10).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(11).unwrap().unbox().get_utxo(), (0xde9a197e9327a24b199715d56ee3b524007c28b9b6490ac520d7612ba2c02506, 0));
        assert_eq!(result.get_in(11).unwrap().unbox().get_script_hash(), 0x39b29c045af60ab02669f37d04b6687d698a627154904c99b8a7995755c70eb);
        assert_eq!(result.get_in(11).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(12).unwrap().unbox().get_utxo(), (0x459d2fd5957c9d50592ef3aab04db9e0f1c46eb53d85dcce031cfbb60a588758, 0));
        assert_eq!(result.get_in(12).unwrap().unbox().get_script_hash(), 0x2e02c90f6aa9fa4e45a2ad1c8e0de62b9c0f20e8ed80ef80915c06151c2b433);
        assert_eq!(result.get_in(12).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(13).unwrap().unbox().get_utxo(), (0xeb0527f3b9271f6d71e5ed854879b2a6914f0e8579276cd39140941ea6cb2903, 1));
        assert_eq!(result.get_in(13).unwrap().unbox().get_script_hash(), 0x414965159908c5e189eef5f6968413ef87a6b93a66190a1d9e5bd8da045d676);
        assert_eq!(result.get_in(13).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(14).unwrap().unbox().get_utxo(), (0x3a7e8d0361a30c3ee4366c983fbc72a77bde4a968193fc77632f30f2ee39f78e, 4));
        assert_eq!(result.get_in(14).unwrap().unbox().get_script_hash(), 0x18b56940e85b655084ed09cc8057bdebd1c1a6ec10cc2d0efa39c736ae68f2);
        assert_eq!(result.get_in(14).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(15).unwrap().unbox().get_utxo(), (0x1e40c706fa84c8bdf2abe8a89870d7bad1325fa3670fcd02374deb7dad8615a2, 0));
        assert_eq!(result.get_in(15).unwrap().unbox().get_script_hash(), 0x1843cd0612c53295068a3d274d3ffc8756f01fc17060ca345598c1d017da53d);
        assert_eq!(result.get_in(15).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(16).unwrap().unbox().get_utxo(), (0xe7a2d94edfe3c98e29d7ffdef8fee9b42d199f6ff76be2382dcd44cf1ed38e7b, 0));
        assert_eq!(result.get_in(16).unwrap().unbox().get_script_hash(), 0x3d236a9e72ca5521389c959444424a1d871e3eec073ff5b7b9e334623733526);
        assert_eq!(result.get_in(16).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(17).unwrap().unbox().get_utxo(), (0x7c2fa86897a322634d6df4c8d9e4e6cc8b7a49c2bb7cbc9468770202eace0b39, 0));
        assert_eq!(result.get_in(17).unwrap().unbox().get_script_hash(), 0x3626daf32735c268c13c7f2ae903d74867104c74ca4277fb89a793f4880d575);
        assert_eq!(result.get_in(17).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(18).unwrap().unbox().get_utxo(), (0x483296421df437eee5f3d0de84ff7b7349949fa93e28af32e4503245274d4f64, 0));
        assert_eq!(result.get_in(18).unwrap().unbox().get_script_hash(), 0x68ce4af22923dd2e9defd1f8947c6f17ebb0e80200b450773f7b885b028a43);
        assert_eq!(result.get_in(18).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(19).unwrap().unbox().get_utxo(), (0xed94f5a53cf9a153b8d2e694c9e7383091691c91755f37188c0451bc4d78f92e, 0));
        assert_eq!(result.get_in(19).unwrap().unbox().get_script_hash(), 0x70276169f845055d5772189f846ccd55af80ffac27cf982132bfff3e25b08b5);
        assert_eq!(result.get_in(19).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(20).unwrap().unbox().get_utxo(), (0xd576a44a4b63efacbbdba666935b0d653788f1e528e5e940ddc734b1df080f3c, 0));
        assert_eq!(result.get_in(20).unwrap().unbox().get_script_hash(), 0x5db91e87fa416e5c8925768e73af9c0952ff57952421f2679c4274d745ff376);
        assert_eq!(result.get_in(20).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(21).unwrap().unbox().get_utxo(), (0xe2db6282875630e46886fab3f8db43d1a910e53c3a6d4c47b2d03328eb6051f8, 0));
        assert_eq!(result.get_in(21).unwrap().unbox().get_script_hash(), 0x2d5dbc2c859abf86e115d644f56b7f972ea43d7e12d998525c27deae0fa8788);
        assert_eq!(result.get_in(21).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(22).unwrap().unbox().get_utxo(), (0x2abe5aab9b7e9e1b4f246abc7a215e7a9a7a09d7f938c38f005e0db518a73c82, 0));
        assert_eq!(result.get_in(22).unwrap().unbox().get_script_hash(), 0x573da02d69ceb36f2cccb0331a97fdc4dac962f571d8a2ea43b71e075126761);
        assert_eq!(result.get_in(22).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(23).unwrap().unbox().get_utxo(), (0xfdf10216b2e1c6efebc9949e5a23081df8f6ef5a2c1987a9d77162a787140e6e, 0));
        assert_eq!(result.get_in(23).unwrap().unbox().get_script_hash(), 0x7478104f38d79789f1d2d7d70780ff049ae3d3e1c9ffcc120fada6dc0c4b59f);
        assert_eq!(result.get_in(23).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(24).unwrap().unbox().get_utxo(), (0xe3fc2cce32923df161196208218910e01159cdde1c0456b97389087916f0e0c8, 0));
        assert_eq!(result.get_in(24).unwrap().unbox().get_script_hash(), 0x3985ab04b9ac4e8ae0cb87e1cdd714b2b744fafe6663536a3c4fb2727ca9c3f);
        assert_eq!(result.get_in(24).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(25).unwrap().unbox().get_utxo(), (0xb5a312bc3daf5a0e128c4b4922bf6b3551a0cc7429915f4f77733069e3efa7b9, 0));
        assert_eq!(result.get_in(25).unwrap().unbox().get_script_hash(), 0x77938813f340517e45aa99db21191496207b2c3672981e6a051d0ab471281e3);
        assert_eq!(result.get_in(25).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(26).unwrap().unbox().get_utxo(), (0x61aa5b635a78c06afb415eb31b6ba526301818c38f7888c247bf2980af8a2b45, 0));
        assert_eq!(result.get_in(26).unwrap().unbox().get_script_hash(), 0x3959a59949b30107c77ace9a544b34a5e59be1cdc7bd26b6423805ea5ba13e8);
        assert_eq!(result.get_in(26).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(27).unwrap().unbox().get_utxo(), (0xc4e9330c724cbad4eeed28d9603d765f21bad7e3c92e6f1f8e3352c809ace7a0, 0));
        assert_eq!(result.get_in(27).unwrap().unbox().get_script_hash(), 0x1779ebb8f9f3858f51101500b26fa7161d08f45580cd7d65116d276591beccd);
        assert_eq!(result.get_in(27).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(28).unwrap().unbox().get_utxo(), (0x05b6c73f618c6fa7fe1dfaaecd2960f03da5b7433f001a8f94716965d36892c3, 0));
        assert_eq!(result.get_in(28).unwrap().unbox().get_script_hash(), 0x4c04b564863f5b5626683d555925ea4b8d954df954a41aa33180b74240e48aa);
        assert_eq!(result.get_in(28).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(29).unwrap().unbox().get_utxo(), (0xde6b389b7e30032f6b17196d12fca8144b220c477d5c78801136c18b7255935c, 0));
        assert_eq!(result.get_in(29).unwrap().unbox().get_script_hash(), 0x24fa06c617bbce953cd0988654f5b4c10be9b1944667a173cb0a5e1e20253f9);
        assert_eq!(result.get_in(29).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(30).unwrap().unbox().get_utxo(), (0x55279a53b60c51b873d083fb63c8b16eefb8f6b6598abe247f270e3cf4aa0a25, 0));
        assert_eq!(result.get_in(30).unwrap().unbox().get_script_hash(), 0x216fa6feaed007fe681e24d9ff94dd4b6d95211d350909c30d0947b9476fc8f);
        assert_eq!(result.get_in(30).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(31).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 131186960);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x4aae0959d9026a86a4951f03098973cfdfaa31b499cd2683024bad323aa61f2);
        assert_eq!(result.get_out(1).is_none(), true);

        // Transaction ID: 9ba56d83633414501a0f55c69bb81b2eaa22962cf1ca21581a56aa7395a88b9f
        let mut serialized_byte_array = array![0x4, 0x01000000010000000000000000000000000000000000000000000000000000, 0x000000000000ffffffff0804ffff001d02b802ffffffff0100f2052a010000, 0x004341044f716278255aad3579d11c8cbd9644aeecf5a80fa5b99410b549c4, 0x591e0bf4768510d5f7d3934bf2c734bad67417c0de26e68b441c16988dfe1f, 0x118554d09cc1ac00000000, 0xb].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x9f8ba895, 0x73aa561a, 0x5821caf1, 0x2c9622aa, 0x2e1bb89b, 0xc6550f1a, 0x50143463, 0x836da59b]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x0000000000000000000000000000000000000000000000000000000000000000, 0xFFFFFFFF));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x633f6ece5b266f309b9e230e68a64c92a2c7decfa726f5fcc7244013de7d574);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 5000000000);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x2480e266576e526f3ef2604ed73e9c4df4b95dff9834c4e116b0e79f4a4e61);
        assert_eq!(result.get_out(1).is_none(), true);

        // Transaction ID: cf87fbb8c969155fe5e65c34fc1fd95512069b08d9a547c0c14795413e1733b7
        let mut serialized_byte_array = array![0x3, 0x01000000014f56e86a6a4502761829aa935312b3478fef9b76329c7cd9c49e, 0x6ff46d52bba30200000000fdffffff014a010000000000002251206bad3c4c, 0x4d20aa420435cecb8d277be5c245d63266113ebbc70287dd2f486078000000, 0x00, 0x1].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0xb733173e, 0x419547c1, 0xc047a5d9, 0x089b0612, 0x55d91ffc, 0x345ce6e5, 0x5f1569c9, 0xb8fb87cf]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x4f56e86a6a4502761829aa935312b3478fef9b76329c7cd9c49e6ff46d52bba3, 2));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x2272be0f580fd156823304800919530eaa97430e972d7213ee13f4fbf7a5dbc);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xfffffffd);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 330);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x2cf2b2dd339c4746fefec86b506741b638c97bfef6a4d2a0bc7fba95bda1486);
        assert_eq!(result.get_out(1).is_none(), true);

        // Transaction ID: 541e7968fa5cf2ce3f2d4e3187938cdb5e9e4ffd49bee5ead72715b63a390313
        let mut serialized_byte_array = array![0x7, 0x01000000019d48f856ee7b8f0b77b47f953e76abf2053a54d9bf5959e1c8f3, 0xe6dd4c173710000000006b483045022100922953e406204b26f2299d86b23c, 0x57ae5373f7cb9061cfa86e915fb562b0045502202234d995226b1c854909c9, 0xee6fea739f9d7fd22107dbb014708d7dbcd0e4ed77012103ae75b443de6edc, 0x922e35d7e957a6f02ad0efca40934346dec7fff62ecda90ddeffffffff02cf, 0xd8742b000000001976a914da2ae5dc63e42f5891b41ed1a243c7131623b517, 0x88ac954f3e03000000001976a9141e9b6034afdd9a4acf57b0d07a38928b01, 0x1e9c5e88ac00000000, 0x9].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x1303393a, 0xb61527d7, 0xeae5be49, 0xfd4f9e5e, 0xdb8c9387, 0x314e2d3f, 0xcef25cfa, 0x68791e54]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x9d48f856ee7b8f0b77b47f953e76abf2053a54d9bf5959e1c8f3e6dd4c173710, 0));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x614379e2ce849ac0b88107019163904abd043b4027e1bcda1dab1204f22a870);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 729077967);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x7568c586efbf9cbe0c65e7cdc769b2cb1cc2a7634d9a52531923604cd1f092f);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 54415253);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x54e64b74e998b23c21cdbe96902200ff1c25a679a733eb09e2e52537b6f9b0b);
        assert_eq!(result.get_out(2).is_none(), true);

        // Transaction ID: be8a1c1303d9074ac62d08d5cae551807fe9187ca3ea304d78cb6eb1ea004817
        let mut serialized_byte_array = array![0x4, 0x01000000010000000000000000000000000000000000000000000000000000, 0x000000000000ffffffff08046332151b02af01ffffffff0100f2052a010000, 0x0043410487492126db6184cbeba67e6dc050835b195e54678bb2329b6d55fd, 0x647a2af351042f85cfaece6e62e7a09a18e159d439b8dd1aae5dbca4e2afcb, 0x8c653ca1d598ac00000000, 0xb].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x174800ea, 0xb16ecb78, 0x4d30eaa3, 0x7c18e97f, 0x8051e5ca, 0xd5082dc6, 0x4a07d903, 0x131c8abe]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x0000000000000000000000000000000000000000000000000000000000000000, 0xFFFFFFFF));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x1abc315db6d90bedf61e3a988444d75336a612d9f4659458dc40ffa15247e28);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 5000000000);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x699eda66432b55de0ef5cab4fdf93a867b06c866528a3420248e49f814b4677);
        assert_eq!(result.get_out(1).is_none(), true);

        // Transaction ID: b9c5c759434913f1ea6524d92958768cd4eb530cf229b82925d77fffde485e74
        let mut serialized_byte_array = array![0x6, 0x0100000001b7dc51cad15ae5241e5449304150a2b3de01a5cf98c58c514804, 0xdacbc398c0f4020000006b483045022100d6ffa389112986cfa8151a554d94, 0x6b14baf9dae85e3db716477a9e31ef337f9702205d3bedc9419bd411fffe4f, 0xa351f34fc5937be3e34d833093eebb077d3f17b29d012103edd26527160a4f, 0x4e7947b2a4db9126809c9e9b03d4f392fbd4d48a0cf2100eedffffffff01e3, 0x0c16000000000017a91455d6abd3538013d59f95beb2a8f71817c39dc79287, 0x00000000, 0x4].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x745e48de, 0xff7fd725, 0x29b829f2, 0x0c53ebd4, 0x8c765829, 0xd92465ea, 0xf1134943, 0x59c7c5b9]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0xb7dc51cad15ae5241e5449304150a2b3de01a5cf98c58c514804dacbc398c0f4, 2));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x3c6b7369d9cdda8a3a3c60fe75c932081483e2539cfef1bb3868ba4ac9a48ae);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 1445091);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x11068d1cd1b05da04499c12b10330b478c5b0ed9210fbcab9349c28026973db);
        assert_eq!(result.get_out(1).is_none(), true);

        // Transaction ID: fd15cac67a62c6a8d8cd032ba3d4847e0e8d44f3a413751dac2cf589e202856a
        let mut serialized_byte_array = array![0x7, 0x01000000013a30cb522258dc0099a521d64c8398eceadd83b49636c612be6b, 0xd4f9e25d8d2f000000006b483045022079b57d7b6c0d24f0f8480e80f311e5, 0x8299c0e3d1d717379dd23c6319647c730d022100ae015250c353700d842d72, 0xd8fd0f2a2c043a2cefce60f013764344c87c34c3110121025d29e508f4b0ab, 0x15a54a8460386d07af4bbbe9b6c5cec325e23b45347f4924cbffffffff020c, 0xa18600000000001976a914769975748af43b8a8cbf5e6b3bb731952e2ad26b, 0x88ac24321100000000001976a9141d095f40138a80e45f686e439c38b61fbb, 0x33508f88ac00000000, 0x9].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x6a8502e2, 0x89f52cac, 0x1d7513a4, 0xf3448d0e, 0x7e84d4a3, 0x2b03cdd8, 0xa8c6627a, 0xc6ca15fd]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x3a30cb522258dc0099a521d64c8398eceadd83b49636c612be6bd4f9e25d8d2f, 0));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x19ff02e355f2809f0231c1f5f25db5391f03c73bc37d7157b6048be66a2de04);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 8823052);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x510eccedff0eaf1960a6ff96e4f062e8ab1525642a20155141a18b06219b936);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 1126948);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x1b5645a4232a4825d8d9f4d9f041a3253f139cdf51f5624ff035e92d60e54ef);
        assert_eq!(result.get_out(2).is_none(), true);

        // Transaction ID: f409d066aeb674786efa03d02896d804b7f8380477ddef486384e0069cd4f77a
        let mut serialized_byte_array = array![0x7, 0x010000000163b607148c818a9736bc98714f8b6a637b588fc4903934c34383, 0xa3840aa14fc8000000006b483045022100e7ea2c36f9b76f22eb3a1b215911, 0xc045914e9c83d002221138b7d216131254e90220040bf8bc2582607b44104d, 0x95cde0f557d155e18f21d0b9cea2ea168775c26fa7012102a00930fbd3cd49, 0x2c4150424919ef7d1cb8439837d78f3a1127414d13ec1d692effffffff026c, 0xb10900000000001976a91489e9acbaf26cfbaa7f74421f8d380028a1223141, 0x88acbc432e00000000001976a914e8b26a0f6406717354d36bdcd9c1d9bf30, 0xceb0bc88ac00000000, 0x9].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x7af7d49c, 0x06e08463, 0x48efdd77, 0x0438f8b7, 0x04d89628, 0xd003fa6e, 0x7874b6ae, 0x66d009f4]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x63b607148c818a9736bc98714f8b6a637b588fc4903934c34383a3840aa14fc8, 0));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x26666112d4ff4332803f9a822d4a21e5d9f528879d094f41cf46508974cc215);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 635244);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x34fda289018b25a4767a48428066fb1a3afb7d9147ab5ea2a1c90f93879bc00);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 3031996);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x69543add9dd9d22cc68354f6ba665db6fd5db8e5126a32dbbb1e3685c18e42e);
        assert_eq!(result.get_out(2).is_none(), true);

        // Transaction ID: 341c64582dd7dc4a21acbf73c12586a0f60ba78c53323d7c5b54f3c0ff8d646b
        let mut serialized_byte_array = array![0x3, 0x0100000001bd261d2a6c5fc95b8bc709efa535d9f2d6bbb79b39d063a1e991, 0xef6f7eab6d180000000017160014f5c5a2e7f774f9a66ef8645c3611fed0c5, 0x3a9481ffffffff011e7401000000000017a9144d3a3cc3b216b19bd8e6a9d1, 0x6086b8620826ead98700000000, 0xd].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x6b648dff, 0xc0f3545b, 0x7c3d3253, 0x8ca70bf6, 0xa08625c1, 0x73bfac21, 0x4adcd72d, 0x58641c34]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0xbd261d2a6c5fc95b8bc709efa535d9f2d6bbb79b39d063a1e991ef6f7eab6d18, 0));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x58816e93151f9a673476b4f5997a4e057332370ec8a384e214a42851a04ad04);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 95262);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x5f84d3efdb95929c730a5206d14b6b0790b8bae0e602ff0ccb49ad70e34660c);
        assert_eq!(result.get_out(1).is_none(), true);

        // Transaction ID: fdff86960e097a4fcb7e269c0d3bf26129ad7349f94841a6697663f22974092e
        let mut serialized_byte_array = array![0x3, 0x0100000001bbf7b5dcaff4cec712d4b70c18b11f2c479229aa39ad5649d581, 0x7509810cf87d0000000000ffffffff02e09304000000000017a91435087a8f, 0xdb15797c85c061c63f6ef85a8d12de0c87b5526b020000000016001430d9e0, 0x36317e9c4f17b5975768886074d9e6a8ec00000000, 0x15].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x2e097429, 0xf2637669, 0xa64148f9, 0x4973ad29, 0x61f23b0d, 0x9c267ecb, 0x4f7a090e, 0x9686fffd]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0xbbf7b5dcaff4cec712d4b70c18b11f2c479229aa39ad5649d5817509810cf87d, 0));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x2272be0f580fd156823304800919530eaa97430e972d7213ee13f4fbf7a5dbc);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 300000);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x5d0799f4e09d4964923c9ea75b86a42e9a89e9062f49742f48ea91ad9a05cab);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 40587957);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x63916e379f62f79ecddc54876764c1b5be9b341c6c5a85ec308597dba545423);
        assert_eq!(result.get_out(2).is_none(), true);

        // Transaction ID: b62409fa1a6219de46e4c8d4a324a9eb9638fffbbf415bd335cdfd4fdf074d53
        let mut serialized_byte_array = array![0xe, 0x0100000002589e173ee8f94cf67fd6e338cace953969c8f3b6ac6b0481a49a, 0x6015c2f65c30000000008b483045022005470ffb05ac5d460594b802abeb8c, 0x39ed28b0eb1242b0af1a10b8bab6d2cb9a022100b072106b0973ff709eb42a, 0x2800a93718091c3430cb1e84557e0c13eab2b71c8801410428ea4649aa397a, 0x8aa64005c92e0c175a860e9c664cad339093794a1409d0646567d73ce24cb3, 0xc1797de6f2eb20ef69ae5a0f59b4b296fc7f530afad142ed7febfffffffffe, 0x35a71b088f40f863a3ca1fd0b6d81e3f1be7537970696b281c381b9cad600f, 0x010000008b48304502202b55471bcecd6d28f1607fd46d8d541555e322125b, 0x178f23c34f566d4f49322502210096d80c8b16a4fe25378e6053cfb8f305b5, 0xd49d6968e0ce7c456004316090c2ee01410423fb7383dbd4a7e32516c69333, 0x233cfbbe8d7019c71e8c9aad180006337d6ad89fafa4fbe41ad96f827a7df5, 0xc3e545825dae34de5e1122ad7210e46e6f596d4dffffffff02c0c62d000000, 0x00001976a91414e811602a31b059c88eeb787e691126a0ef372188ac005a62, 0x02000000001976a914fbe4c8bff5f70115d3ac22f20fce0180b7312a6f88ac, 0x00000000, 0x4].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x534d07df, 0x4ffdcd35, 0xd35b41bf, 0xfbff3896, 0xeba924a3, 0xd4c8e446, 0xde19621a, 0xfa0924b6]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x589e173ee8f94cf67fd6e338cace953969c8f3b6ac6b0481a49a6015c2f65c30, 0));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0xc56b45b62e8fc71f18b6acb93b2f20735c333c20b6b1beeea9cb6005bb5840);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).unwrap().unbox().get_utxo(), (0xfe35a71b088f40f863a3ca1fd0b6d81e3f1be7537970696b281c381b9cad600f, 1));
        assert_eq!(result.get_in(1).unwrap().unbox().get_script_hash(), 0x36af0b6ff81458f6d462460418d447587310af03f728f962e82f9131def9290);
        assert_eq!(result.get_in(1).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(2).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 3000000);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x403791a914706632517e77a16672326bc5f946844dc5ea3f97c13366e154ae2);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 40000000);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x7f9eb5becad68f77770104a20668bb6c9a54f51499df652bb8f7ebac99b6a97);
        assert_eq!(result.get_out(2).is_none(), true);

        // Transaction ID: 88e84382ff20176240ee8b6c59fa8a5e7f22848be547e87ccd32be1aa114993e
        let mut serialized_byte_array = array![0x8, 0x01000000013407770911ad808cf9d5f65d8f043a11c8d0b2d8614c747d00f8, 0xaa1956c58162010000008b483045022100f2ffda64baec6b387299e2b6f8a2, 0x0c1c46fb11a967e63ca1ce5d4caae739b4f402201bb29196a73653b1c25116, 0xaeac09f201bae1e9b5ae3669ebbcd074b2668bb5b301410478b68899e274d9, 0x7987861873e6b9b338873c31c7ee20ac97f70c72397c4cf0888fe7faac18e5, 0x59bfbf5821914a5cf844aa97da1f9d660d23246b6c5d2fbfdfa4ffffffff02, 0x8080ec3e150000001976a914d0981f5574ae76782cad0dc90f08c0e7c05eaa, 0x5c88ac80f0fa02000000001976a914e9403d03ba084e355e570ed425293925, 0x6f4c7f0b88ac00000000, 0xa].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x3e9914a1, 0x1abe32cd, 0x7ce847e5, 0x8b84227f, 0x5e8afa59, 0x6c8bee40, 0x621720ff, 0x8243e888]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x3407770911ad808cf9d5f65d8f043a11c8d0b2d8614c747d00f8aa1956c58162, 1));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x67ae5ec51cc5a6ec7f3c0fa4406321f87c373fb5ab729a5afb7b5133f6192f0);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 91250000000);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x1ae2cb7cdf9cec056badf7f24d2c0ecac4e1af4da413f34ad800f3510a236b4);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 50000000);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x2542138852902e47265a6b9ce830b6b8e84d4f47406e63ee4e6da4007c7a81d);
        assert_eq!(result.get_out(2).is_none(), true);

        // Transaction ID: dc45b2ec9aabeb7af78fd2abb9a523269c6f4a95283ef9b79f629a61b0e0ae3a
        let mut serialized_byte_array = array![0x4, 0x01000000010000000000000000000000000000000000000000000000000000, 0x000000000000ffffffff070471be001d0107ffffffff0100f2052a01000000, 0x4341047e9d17c44fd8ba31fd5f55f6af5f044fc2890ec64206799cc9cc3ee6, 0x7064e7117c8955ad4196d91dc43248d52ba5ba7d92a5cad23c5f6afdc96985, 0xf630e677fcac00000000, 0xa].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1);
        assert_eq!(result.get_locktime(), 0);
        assert_eq!(result.get_hash(), [0x3aaee0b0, 0x619a629f, 0xb7f93e28, 0x954a6f9c, 0x2623a5b9, 0xabd28ff7, 0x7aebab9a, 0xecb245dc]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x0000000000000000000000000000000000000000000000000000000000000000, 0xFFFFFFFF));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x5f84cb77977c0b9386df30e355354e6b5e4e8bde9518e0655fb16f5a31705d);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xffffffff);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 5000000000);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x472935b9ce6d13132ce47e988b157f8b2e8e7b953ef83c03af96c88f69ae9e5);
        assert_eq!(result.get_out(1).is_none(), true);
    }

    #[test]
    fn test_random_txs() {
        // Transaction ID: 3e85572de2d1da4e06a9e81c01b59e0305e71d78cac32912ee87d9332c5106a1
        let mut serialized_byte_array = array![0x2e, 0x226b9a7c0489bf385effb9916c8fedfec31baf25d2210df07301a8905449b2, 0x135711908695d441fca9fd80019c5c1e3fdc62401971d2bf08881db1e14579, 0x444d6b26c13a08ea5b6efd9b362e58c610ffbec40a4eefb79aae10ff66f1b9, 0x94267ff2016a705de824452e8308e365c64dbb69e2399f0244dd81725cfd8e, 0x6305f8da79674f3c156bf8d3ddb8bd0fbfc8bf644842bdae0328e0fa088103, 0xcd1d0eed13cf059f13a3c2a1b011713728a3a16d661eaf2e996749633c6b3a, 0xc05a0335af9eb73bfc72401b07ecdd233d65984fd867f6fbf0cc3f880c199b, 0xff0d92e555a1d2ce561efa93d4b58c05d2f83822fccd1f987f3636e65b6908, 0x206b961b24e80da81a80493b57b570aa4c4a043cf3a59b2b992a339941c611, 0x3111ab7dcad35fa841aa19e43ce66c77c7a4f74d13179542e2d4377e17f5c0, 0x30364a0f286b71174730605922ad093e43ce10974266dec95f8428c31db4ae, 0xd5d1dc6f22995492985a011bf33fd6286f0d2bdde78dc88e2279342533d4d1, 0xd4c133c80f9534bb8762d802174b80e04a8e764d28cc8e03bbd8bf364d3bac, 0xd3259046515551667bca31616c989a80ce6cafc410dbe8ec5ca1e0e343b618, 0x74bea282e75b05c8727a22b1f42a9222a1d177c15903d4bbeca7fdde94cb31, 0xf9561bf839feedf0cce0de8e532d95b7aab3bb394dd3e0306f5d95ff8e73aa, 0x81538b7fe7a5781d9ff921395d2d8cf9fb50b1901b8f8a70bd3cbebceb0c2f, 0x861374605fd56a4f42513f1b780a8ab8db04e641a68f6dcdb59db5059be124, 0xa73106b2c923a59d1702a469d79e8fdff9fd7c4c3a1c703fba3092d599cc10, 0xa20f5915db89a3205aef2fac657b6276b6081e948ef92f38dbe5a63cdae899, 0x9bb0ed074be198d3a51f3c16d5e06f99ccc9e96308987daeecde8fd5e884eb, 0x2db4660db1204e15a0aac406db997b82b0e47357bcaf28756bdebdf626c921, 0xedf0d89d448fc42666cc7a9bcf0be063c96ea5ee2141db9f592032cb6b664e, 0xd8e479479a1a649611bf9ab3acd957dde57000a719a292ae137364b360981c, 0xa51740cce6ae08ec1ed72fe301e3b8457156020cc8b3499dc603a4f9c85ba8, 0xe1524ea41d970e47289789c525ba1c583d8498f6dd45cb1b9197c4b3398c82, 0xf99c7b463489854898a02eb7c88d405e7fa2906c12050538c19a0446e72f22, 0xf3aba0410a00fd334b5c8f21476859ef9f4b0572a9ab590d6bcaefed293064, 0x4981f4b66b09c3d6009f8b7d811d56ba51b11bee2cac16cd6bf6a4aed5cb53, 0x0d131f7fd00b197780e872024946b527362f39479e9390e9ffa4f101869888, 0xf20c357c1f40cb7ead89bf07d362bfa06a674f5f513dbb7571d2028e6badb3, 0x5b6853be82ab5f0d3423a66ad0779aba6cac719d9005cc79b99124a1a1a333, 0xc062a428451e96c0ae55ac486fcf7a03b8cafc59e51bc7d014842f334aeb42, 0x7ea5fd1d017e47be40d6d1afe90c4f9c8e6bac5074658d0a0bb94044834bc7, 0x4f789bc544c2a24a3d22ec7b04a2a3c74e96c6394cdfdc3777b17e419f9132, 0xe7ac952b77ef4ed3439c8b82ca5b5728392b0dacc6e937f942659a4eb358f3, 0x04e3448508d91a12dac111714c0d83abc58c111772e7e3745cac193411137f, 0x5bd3995863677e736f5cad0d4f120175b130360e0c008aeac876262d3b6b6f, 0x15fe05dbc3cef48d3793cb81d81442a7e503c1ca4e6fb5544551a77b37b12f, 0x043bd482e5b9370b13895956b32ad6416f4744dc22c1c35c8e3ceaf913fb35, 0xf7fba3c7936bf2776893dda60320c454dca139b9506f2e4a5d2df7958decf9, 0xc191b536565fd1d9506fcfef475c7c0f0f72ee25973326aff6b8aea381d31e, 0x4c8cbf2028f0bca85ece81118421dc03caab9f00b34a05000828775e9b637d, 0xba62acca803f85ad04000c3301238c932e0aafb62cead14cccef770c3f0200, 0x3aa007aabaae9d83d8b7e71c10ed4f7e740369c8f1cdff48958b5e878fdd2b, 0x9d3c1e3f530c348aab2c15cebab8f2ff3bfaa7fa7648d338db5ad2fb0d5299, 0xcf, 0x1].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 2090494754);
        assert_eq!(result.get_locktime(), 3482931725);
        assert_eq!(result.get_hash(), [0xa106512c, 0x33d987ee, 0x1229c3ca, 0x781de705, 0x039eb501, 0x1ce8a906, 0x4edad1e2, 0x2d57853e]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x89bf385effb9916c8fedfec31baf25d2210df07301a8905449b2135711908695, 2851881428));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x1a7dcede610abd5c14b6f84713e684f5b430b00b23a6237bd4d9cf3191e4ef9);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0x43e3e0a1);
        assert_eq!(result.get_in(1).unwrap().unbox().get_utxo(), (0xb61874bea282e75b05c8727a22b1f42a9222a1d177c15903d4bbeca7fdde94cb, 458684721));
        assert_eq!(result.get_in(1).unwrap().unbox().get_script_hash(), 0xc3f47023f84fcf3c569c3d73ddf0812ea0f37abc42c7771290bff83ff8c4e);
        assert_eq!(result.get_in(1).unwrap().unbox().get_n_sequence(), 0x96641a9a);
        assert_eq!(result.get_in(2).unwrap().unbox().get_utxo(), (0x11bf9ab3acd957dde57000a719a292ae137364b360981ca51740cce6ae08ec1e, 31666135));
        assert_eq!(result.get_in(2).unwrap().unbox().get_script_hash(), 0x4e4370f2f2176b641c7f5ac363e2aee5fcf03a175c630029da585bc9247a3c6);
        assert_eq!(result.get_in(2).unwrap().unbox().get_n_sequence(), 0xa12491b9);
        assert_eq!(result.get_in(3).unwrap().unbox().get_utxo(), (0xa1a333c062a428451e96c0ae55ac486fcf7a03b8cafc59e51bc7d014842f334a, 2776515307));
        assert_eq!(result.get_in(3).unwrap().unbox().get_script_hash(), 0x39ffd46faf945394f10fa1d7c8910b68cd1b9b210fb265495390d00973845fb);
        assert_eq!(result.get_in(3).unwrap().unbox().get_n_sequence(), 0xdc218411);
        assert_eq!(result.get_in(4).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 1489507553618890);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x380d4ccd87c1dedb221b0c22232cd500b3d23d762f59601c4d53ce104076b13);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 1316687714503340);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x6539abee581bb887eb6cde0119852ead9a3f1e498ea267ba6691608b8a219f8);
        assert_eq!(result.get_out(2).unwrap().unbox().get_value(), 632272737782860);
        assert_eq!(result.get_out(2).unwrap().unbox().get_script_hash(), 0x53f2f888af4e8768b12c66bc4c49cfd57ff3dd4de504b084f1ce46b6e3107a5);
        assert_eq!(result.get_out(3).is_none(), true);

        // Transaction ID: 3d57cc8f8090e5f6c16850031d4b8da61f9ff6075daf182fed29eece8933243a
        let mut serialized_byte_array = array![0x32, 0x7729cd6105adad687639facdd8e69e90328adc18d9a066b4d508bfc16b9334, 0xa817901093de17cfa2a98d3520dfb5041053dd5d904f9aa07db0482e96bb13, 0xe8af87c88b64be15665ccea49f02be66d0a6dec55aab3bf2a929566cc94ace, 0xdc60562d1009d2dce0ed81aafa966a3e782bf228f58de07023f8d0997ee154, 0xfe25ad9bde41432bdc8be687090fc33cb1cc0d321e68fff091daa976a2e551, 0xa230f4e3a6017bfdbcf244384b1b85d6d82843c44ec25acc3cff3d502c1969, 0xdeec84c33fa07cd5ad03e73963dfc0b251807e59385483bc38036b8379b9fa, 0x3d983d872806fd2b010dfe680c73bd78c2bfa85eafcb91edff8035ecb714bf, 0x83ee200e81220bd4d731b6b263a64dc37bb9b70ed921b8f3e45a9be5214d50, 0x3f4d02948fe98c2a7356c921587e136736178d0f3f4ad8cfecefb01156ee79, 0x5fed9746ccf2b753317d308efaefe421bfeed0bb5ee2e2f9b7e65f6ea669e7, 0x3cf0e95b59e430f176942b24ee1d61187509bf4416f960402d8ec3e09bce2f, 0xfd1c46eefd822310094084263912931498c4d856524c8b848bf7cb7723a873, 0xcc98827b240b33bc93e31ff65681fed1a7bcafe41a34cfefc242f1f12fcead, 0x229cf7a693a567835a94f3f803cb4961a3c1096670162999e81001f431a54e, 0x6fe7d2074bf5e0158a719f8bdf74222068160d2181facabfe48f1ca431a150, 0xed745239304666288c0b10de3a9189fb76aab4436c670fc2c1d5563fe8628b, 0xbcf110ad053a254b72ff6f80f9bf0ebf073fbcec1481ccc14a47f85aaf5a69, 0x26dcd0c2063e0555e657a49d741b27ab36d00e6cbdb76d3b901e86b9a26481, 0xe6b27d635e342215ea8f5caa6baacf97cdb22ac5caad2912afc36d097725b6, 0x911949812a252ccb38050516e392b313d410637c71ab5b03cb6ce0bd99f0cb, 0xeda5106679907163e4cc146aeea16d2b60551523ee9e5cb80d7bc17dad934d, 0xc508fe677e514f2ee4fd84019c31125465ade55f18e026d535b8d24fef9728, 0x43e89156a53aa0ae1a9e6eeaf506bf2c215c543c36c66cb3efede97256afec, 0x834d1f72b74920e8f30742234e2ab87bf392ebe50639a0155bde62b0517ed6, 0x7fbbad2cad0efe1010ab08dd6cbe2dda87c7a8a85d31458ccf3c4aae9bc9ab, 0x0ab65025cc61a5cf7f7acfe9e11484229685a970c886858c2e71fed3b5577a, 0x168a837fb87f33f8af73b11482c059dfee9b31ba708fa712b789a96d248143, 0x9fc3c3f4f6b5fac049ba07801f05d843b2a0e03cf16d46ddad1de698bc8c96, 0x54c5325dcf39d0dab9ce0c4c73533401b9283a530be2a7b3e3613a63552d38, 0xf4d3c9b2c918ffba323d9ba44e5225e37ad0be7e773c4852cb56a4066d05f8, 0x20cbc1c25a0b31d5a763839b1b599baa9d1a04536397ad3a850de91382e0dc, 0x39ce4248872eb52e42a16b4979d1623db5a8686e73fe8efb9f032ae646ccba, 0x06c52aad96966783431621034f763b2e5bda4135ea83ff7d3eeaf0ae2459d7, 0x8dd3d9a3dddceb89ba9eafb0c5d2dcafb71c9da2166a7afbd8a94ad791e17a, 0x06f0eb45622493ce86eabc22cde4e5d792e307e5d2f18941ddf22d5a4424dc, 0xea8e1eb1684bfdaf01ee49974bb3473ca6b2b5bbeaf73d59eba51bb9411d8d, 0x03182cbedbb508b45b8598f5d36fa1bfa1417c15e6e974443b98740fa26495, 0x855444c2a535986b4959674bfe6c03b2d1cf7264d8e65f72b73899f346e963, 0x081beddde03b1bdefe680f968ac35ac3b0dda79a8fe2463d46c1fea26eb6c3, 0x94fedc972fa2d7bc81cedf1d2d5e646560070766a74a54ce38d8a8afe9567f, 0x007d65abc155860ac7ec3b10d329ade7a6c02fb5f05a57e2a2cfc2dde18697, 0xf10f5647a99fe8115665c9180505e90cd9b32e2b8fef31e28699a254a4afd9, 0x11cc99412fd6c04b9f3bba33ca9b7bb42f3b0c1685452ef875cc54d25198cc, 0xa262ae19a020955b331f35edca8d0d5aadf15dc8d42e8546f1285925d09ffb, 0x37fcf077455fcc78c7f6b4dd0233b181ee33801505996962736deff1742a28, 0x48b8f1b8f8f8f1f8e0bfdccfca245211c62b98e6d05a444d0e68aebe78fddb, 0x3ed0c7b102133f04fbe7999e4b85d71a4049926a2e63dee424f15841f69f96, 0x237149383df33d0258e25de9d878b9b097f5f8750986f9cc6e7dcc1d4f67f6, 0xc2c8a23282c24ea42bf7f6c6079da6f4c3c93298e555d4203085fc83eb047c, 0x2a300afdcdd2564a34a201496baddc7c2f010000b96cc6f9, 0x18].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1640835447);
        assert_eq!(result.get_locktime(), 4190530745);
        assert_eq!(result.get_hash(), [0x3a243389, 0xceee29ed, 0x2f18af5d, 0x07f69f1f, 0xa68d4b1d, 0x035068c1, 0xf6e59080, 0x8fcc573d]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0xadad687639facdd8e69e90328adc18d9a066b4d508bfc16b9334a817901093de, 2846019351));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x50bd85fcbadd1b4a3bcf8400897141073b3961744603a81b3276e1e0cdab518);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xde69192c);
        assert_eq!(result.get_in(1).unwrap().unbox().get_utxo(), (0xec84c33fa07cd5ad03e73963dfc0b251807e59385483bc38036b8379b9fa3d98, 103319357));
        assert_eq!(result.get_in(1).unwrap().unbox().get_script_hash(), 0x5d20b2a3e4219159ac1f014d6a3641c1aeeb2e44042abe50e43ad4eccc6c1f7);
        assert_eq!(result.get_in(1).unwrap().unbox().get_n_sequence(), 0xf1bc8b62);
        assert_eq!(result.get_in(2).unwrap().unbox().get_utxo(), (0x10ad053a254b72ff6f80f9bf0ebf073fbcec1481ccc14a47f85aaf5a6926dcd0, 87951042));
        assert_eq!(result.get_in(2).unwrap().unbox().get_script_hash(), 0x58e25e1c3e3cc02dfb11f95a9e2766617ae423023ccdf843bcc202fd931441e);
        assert_eq!(result.get_in(2).unwrap().unbox().get_n_sequence(), 0x6610a5ed);
        assert_eq!(result.get_in(3).unwrap().unbox().get_utxo(), (0x79907163e4cc146aeea16d2b60551523ee9e5cb80d7bc17dad934dc508fe677e, 3828240209));
        assert_eq!(result.get_in(3).unwrap().unbox().get_script_hash(), 0x1ec563eb05e428506ffc86f578904f20fbcc696b686f4de189530eaec1209df);
        assert_eq!(result.get_in(3).unwrap().unbox().get_n_sequence(), 0x67ae191);
        assert_eq!(result.get_in(4).unwrap().unbox().get_utxo(), (0xf0eb45622493ce86eabc22cde4e5d792e307e5d2f18941ddf22d5a4424dcea8e, 1265152286));
        assert_eq!(result.get_in(4).unwrap().unbox().get_script_hash(), 0x3883951346a6b8ff60cb35b5c799586f7978f5de153f91d0b7107912a70ef3a);
        assert_eq!(result.get_in(4).unwrap().unbox().get_n_sequence(), 0xa2344a56);
        assert_eq!(result.get_in(5).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 333688301513545);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x2272be0f580fd156823304800919530eaa97430e972d7213ee13f4fbf7a5dbc);
        assert_eq!(result.get_out(1).is_none(), true);

        // Transaction ID: 7bfcf39e1215308233127659d2104bdf6c41b471a7b19037da7347640af187c1
        let mut serialized_byte_array = array![0x16, 0x62392a7c026a7434e036b1cb99d0c3348e95eb35a480e31fe23c122c7e5caf, 0x7a366c387a8bef3d4c51fdfd009f812af97ec125e60b458e8c186b514e36e1, 0xe671a57236a94128943997e3016f3c2073af5c06be8aed8f081179e67f2581, 0x41cc31671e276cf787cb3e80256895b453da749ee378222bf4f89e6aaaf338, 0x6f0d037fad36792e2a54f736e8a3d4adcc24e4a5b081912ffb663b964e82e8, 0x7ba184e2c825a6e8b1cf1a87c68666eed1f61fd173126b7f0b3a99d049959d, 0x0c5431843039e04cb725aaedaf5bbb82ef16af114d7126d2186cb9242404dd, 0xb20d0048aaf8064d52128e6c2fbab36726d9e9fd57df0019f22732e0c41f6c, 0x7d1991f7428dbdecb5b27a5e0a0bb455e0a7362ae59bd72fad77fb18491fc6, 0x17ed3201093543da522b510204b31baba6eb8630c54c2286f9008e3ba3cb6f, 0x45ca0548128bc15aacfe641049e15831b8c602834c8c9060b80402fd230184, 0x246342499f101463c4e1686cba8241fc13e58a846541c0d75b8a24c16b936c, 0x2d8c26a1b2d5091058c8564891325b6b20f06c012f0e6c0844ae97e1f05ef5, 0xa2899d87e20e806328745ff592ce103483cd4d3880eefc71f1b492468a6cb0, 0x0e9bbbc053f2f7f6ceeb0d5fcd9aeee76de68c1b7c6877dd612c6250169cb2, 0xc779203153a52acee4729d49fc6a2c71c3e2d0cce1e1c05d550df2dfeda017, 0x1e63e1c97e34475deca74823737f153816d4d0e6a7d98f692d54e18bfdc555, 0xed7aa4af77740ed64271cffc8aebdfac741eba4f996a6b9469e6d6cd4335e5, 0x276ef8fd32e04a7806a083e31d3c53283723014b7b8adc592886f8236ae07d, 0x2c171cd0b36703461187ee5b20aa77da3aafeb1a66edbd0ecdf176170f35f6, 0x155f1a9e1e21237a3eb2be9a64a5310294187f3873fe02002f89c9f853e7b7, 0xf94ba5f8dc75336c7c1fac37d4a810fa78f59a5451589a4d4c33c6a9ff5ed2, 0x9fc69e2c59d61b04b71a91952c8b6f74020005076c22d827340b5db2, 0x1c].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 2083141986);
        assert_eq!(result.get_locktime(), 2992442164);
        assert_eq!(result.get_hash(), [0xc187f10a, 0x644773da, 0x3790b1a7, 0x71b4416c, 0xdf4b10d2, 0x59761233, 0x82301512, 0x9ef3fc7b]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x6a7434e036b1cb99d0c3348e95eb35a480e31fe23c122c7e5caf7a366c387a8b, 1363951087));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x7a8b96b3fa55bb439e8d97c86bb42e783ee382032f5460a5d19aae6be8009bc);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0x4cc53086);
        assert_eq!(result.get_in(1).unwrap().unbox().get_utxo(), (0x2286f9008e3ba3cb6f45ca0548128bc15aacfe641049e15831b8c602834c8c90, 33863776));
        assert_eq!(result.get_in(1).unwrap().unbox().get_script_hash(), 0x29cab84e2411a3bbf53471805bacdb8d6beb9fe7e2134970491dc1fc9113882);
        assert_eq!(result.get_in(1).unwrap().unbox().get_n_sequence(), 0x31a5649a);
        assert_eq!(result.get_in(2).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 842720775968916);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x17f84c42a44f17909213fad651521088e867d583f971de46f4c9ef858973a6e);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 690972378568081);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x2075b702ac0df3f76748eb42922c2989e9e472e7e53b737c0d50643b2f2c54e);
        assert_eq!(result.get_out(2).is_none(), true);

        // Transaction ID: e389b122ab048d81f365b2b824a7f634e49c922a97cad11dd092ae794f8a1e67
        let mut serialized_byte_array = array![0x14, 0x2536873e0125f9a9af57e91804807ec28618e1fa6aa378b9fca4f4cabbaac8, 0x0c7cf4e737cf5b142778fd9a011963ddede150ebb4a55507af9e22feb54b1a, 0xd1c6d12056f258685a9b1d8903843dc5bcd72edb67b5f6098ebed80b7f26e7, 0x7e8fa8ff357dab087391b1601ea3460235f74c5f04ba3ec9615e30710c7d27, 0x0cdca32d964732e3d9b5e4013bcf4971be95fdc663f2f54c8da63f8dd90794, 0xc768ac5a0c1b191aa164ad5ada217f6159c67d1b1d22fafe31fce285a0db50, 0x23ff290c0de037fd77e42cc4df83939240d29efdef0e95eb47efbad00ccd4a, 0x1f79d3ca1a439be8d9418330606ec594f2cf1dc620bb336417ad69da3571d2, 0x1215e8fdbf1248556ebf120e0e3e72b8be644f80f71fd345aede40ced44c59, 0x9285e784dcd74a7b83c7bc1d1757ebb542100b934bda007736798633f58e07, 0x2ca30a2fd485173074312bac41141d45ae7ab1d47bd505f955709c78ffe8b4, 0xe42c716ba3da318515e276040c75df0a3435e7607dccefd4c2d8dccf46d14a, 0x8110d3a14056360c06e425778cb5683613b215bd7382d2d7b02477f5b0dca9, 0x7e90c84192d0d781f29a6fd3125e5e985258ede37267f04571026df9696944, 0xcbd87fc47e1e3ed42e6fbba712c5b68658a2306256c3fcfb0436f730c3b1f9, 0x010017b8bab3f3499810304d2668d475e5ffdf5e49ab9b59213aeabf79c04c, 0xce010036468ab30401f226844d199cc7d00dd93d3c38a2231498a02b32738d, 0x3f5fb66cb279980c639f070a95dbb9ce37d8b47333ad298516538bc43abc17, 0x7c3e05001f5fb80953edcc85c67f06ed38bfdedb862aea2cfac39a8b465744, 0xb1df7a4e6731663644b8dc020022a59178afc8841047ea07103767578da605, 0x247247a99498a07936c646f9e425da5c7f9a64910c, 0x15].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1049048613);
        assert_eq!(result.get_locktime(), 210855066);
        assert_eq!(result.get_hash(), [0x671e8a4f, 0x79ae92d0, 0x1dd1ca97, 0x2a929ce4, 0x34f6a724, 0xb8b265f3, 0x818d04ab, 0x22b189e3]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x25f9a9af57e91804807ec28618e1fa6aa378b9fca4f4cabbaac80c7cf4e737cf, 2015827035));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0xaece91da952e84b26e739f076e6f62e151c56ba4c4ed242761f1425c979bd5);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xfbfcc356);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 556016856004406);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x6bb7be1382be459d1616f2a14f55b239b087948bd63ec7b2d6f70121b5c9ddf);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 508304018751466);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x300d24ccdd31c493f925d21f6e81d49e512ab5f4f65c7d62ce252ad6401d477);
        assert_eq!(result.get_out(2).unwrap().unbox().get_value(), 1476077578631876);
        assert_eq!(result.get_out(2).unwrap().unbox().get_script_hash(), 0x7f5964a373951bd5325f256ef4c89e62697635ea4b459871f1b96ebd7b4ec9b);
        assert_eq!(result.get_out(3).unwrap().unbox().get_value(), 805633929930289);
        assert_eq!(result.get_out(3).unwrap().unbox().get_script_hash(), 0x428af0ea49c35d60be820f046adbeace14b02abbbda00bedd86816c672de873);
        assert_eq!(result.get_out(4).is_none(), true);

        // Transaction ID: 3569646cf822bac2dbc6da71a1acd6d757057a57afb2fbce9cf3314e22940eaf
        let mut serialized_byte_array = array![0xf, 0xca5e130f02488cc76eda38893693771d08969b1353383f11dbd544827996fe, 0x43a382574c063d1440435b094967ec1e4901625ce6ce87a8c92911685d77c0, 0x9d059a367878f11cb4428381a7e2f10929e044878b346393fba32484d60d90, 0x0839cd8d80822b06d6a5c5da9837e863f298d46c58523690791a65dfa1f78a, 0x588e7e4dc98cd2d94ea8c1fcd474b7e1d717bc7170b4814758f8286307d221, 0xda0a48db0781fd9a62214895c8961adc5df4e7b1e868e5a3f7eebc0c9a3086, 0xca32500385afc86ba9a86e583ce676ccfbed362344f242e05f87e538dd4446, 0xae9a05810b364dac600961467583db13738b8a4d976d5b2f7ad2f556ff62df, 0x543e7b6a0630634de0dc66ba94f636b781648013d3819a533d4ad19350921a, 0xb7c3e030485bf2caac2839ef17f53fe6297c55b58feccde06aaddab58a645b, 0x10df73889e0851ded4216d9d085b8cd70d171da7d06a4a252f0308ad987887, 0xdcf6ff2c26911cfb761b6e31a001acc06de5e61f97e209320045249ea6f218, 0xdeb0f98a7d56ce70e47425875e5a03e8655bf6d7664a76e787b4a08510027b, 0x65bd53144bf00246406ddc697c06002de09a70ec322a082b9102e71acf0cd0, 0x55a5e60b0207cfc9fb6331e594aacb41f4d0da4a753e54da5ecc00c4a0f37a, 0x7fc679638a0300116693ddae8229e5151643c094416555a273bbc2fab6, 0x1d].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 252927690);
        assert_eq!(result.get_locktime(), 3069887163);
        assert_eq!(result.get_hash(), [0xaf0e9422, 0x4e31f39c, 0xcefbb2af, 0x577a0557, 0xd7d6aca1, 0x71dac6db, 0xc2ba22f8, 0x6c646935]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x488cc76eda38893693771d08969b1353383f11dbd544827996fe43a382574c06, 1128272957));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x3c479ec3f7956501b5a3624ffeed75af9bc0e8a931fe93428af20659247ed26);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xd4fcc1a8);
        assert_eq!(result.get_in(1).unwrap().unbox().get_utxo(), (0x74b7e1d717bc7170b4814758f8286307d221da0a48db0781fd9a62214895c896, 4099791898));
        assert_eq!(result.get_in(1).unwrap().unbox().get_script_hash(), 0x506d48c95e93288faa45890c87d122fff84456138df06cec4e2aa4c4b4110cc);
        assert_eq!(result.get_in(1).unwrap().unbox().get_n_sequence(), 0xf04b1453);
        assert_eq!(result.get_in(2).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 1825643971821638);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x1bf4dd29c965b690ee572953b192c829184710f10567f6cd118f5ca4173dcb1);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 996584779579258);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x34bc54dde4a237d98796d6b9814c9f9af21a113ccbfe5e9bfb0eedeb52cf51e);
        assert_eq!(result.get_out(2).is_none(), true);

        // Transaction ID: 50624511a598e8c0fe909baf00c2f13390e17573ddae5de1eed9a1777e390ae7
        let mut serialized_byte_array = array![0x25, 0xa4f893460452926722b94ff470ecc98b8dc6e49b1ca7f47a8b7215aaa4d28d, 0x8c7a3b2f1e28598f94e83862deda36b9b9e2bebe01a3b6ff8e9bf22a4a3dd7, 0xff5422bd1bec5ce1795cba7757ec33dc734a9ecd9a79b7834e48708fe1f2c5, 0x045a50d524150e322bbb9e50c7228405111786b3cea92ffaefa5fee3e25bd4, 0x503d256c173f3ba1a323cf2cad50fdcf01b9f69ffe0b599386f0bd8cffd9b6, 0xc5b5dba511445c939347506f21818d94db4962516f1ed8af84c48d10036b0f, 0x2deeb085bde5d7be1765772706640e2d933bf70085664abf1675f70062e443, 0xfb758e8e6b022069f235afaf29458648d5cacaa3d59463151f1537aa1a2cca, 0x0e912433aeec70983890c198596d8dfa271d3f1004172cad275922a6f50bc6, 0x0e8038f86ca69fc1663a9f393204b718b95f849e2c70a72645c438b4d0008a, 0x0a1b558dbe18bc3f8744fcc46cc7a375d5573fb127f112ef6816f164d5192b, 0xd9cf5b7a4cc3f235355b931268f8bc66e95d33a37d3762ade58486a9c1bd64, 0xd620fcafac9d186ee0d0f20fafd7e16132eb349397b86012fdcca2d7051342, 0x8cebca53a5e5c6674e4b20d38e958b86ec648bb8f38c93a4e92057c969f969, 0xb64e60f0d3d4e7af383a64f1d8ce22ab3c1d3dc59c268238b994a977ffadb0, 0x2be5650b64a348674e321b1456ffd147f92936a0cd061356b7739c62891a9b, 0xbffbba91d39d4b2a739b835266f652752854c36da3682b6475a2b2d688d9ff, 0x21a32d3cea78dafd403fbe5fd07c381f477bfea11d44ae8c4ae7531093e01f, 0x94fd05e9c5bb80f14e110b97c946200937b917666a56b9a6725645cb71882f, 0x666eaf7e7f3f2ee2aac1197f736de5bcb3e292a299413df26fd3c5981a79b2, 0xcd98a26a732abcd8ef74db1587a41c5a63a640b47544f34f4c5fefce93bb77, 0x6e0ae98a7afeb3f5d34451ea086d0fd85c7bbc8118aa0c94bc3d0469565d83, 0xab8d9a16774777edec6deaec625044001ad29e6e3dc95103142eb8da345d2c, 0xc1d1c7a3c99b839947b8ee8b3d83c2f682490c792d1b12a77f8ef81fc0cda6, 0x67dc7898a4cf3b5b1eb099966db17d7775d6cf11dc270d1ab64e3082a3083e, 0xfc780b64d50c04ccd486d1007e1a09bd92188998d533d55d826dc914c30105, 0xc72aa4ae1fdf9fc9a02f0dfb617887269bcdb1c6c96d6baa4c7b6edfe78d27, 0x52e9cbb598a06b2fc8b3218b10b94902b868df02e27f4e8a3afce9e34d28cc, 0xbbe12059a05acd0a87349187fe53f507c856d1f9e881d54bcde48a3f1603f2, 0x05794c19a38872b5c7769eddb180dc7b3d716f5d106fed21ee6dcff47197dc, 0xe0f41280f190cc7e0f2a728245c2777ce89a661be30ad40d4990c276c8d4a0, 0x3cef52e570c7d0239c1e5385e52eb3c9a2a33704da272396478b00000c83c9, 0x773c5223583c3da7e9859686fc1194a404000f6d38f4ecb7a3560bf706f982, 0xa2406774fe1784b59005003e10cebf7a6b8653b90cbf20ab13c7cc04ace83a, 0xe37815ad2b66f22790f883935537d26c1b10c24464e7202d1d39088981ce25, 0x5867a9ec0f54f0ef240a08204bd07c6e694200003d22705beb501873fbab18, 0xab3b701555f2efe89b60687b32b6fc096f57daff05c2900fe00d1691e59ff3, 0x1db567da9c1a9d33ca7ee4a46df84d46fb259a7ad856c450, 0x18].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1184102564);
        assert_eq!(result.get_locktime(), 1355044568);
        assert_eq!(result.get_hash(), [0xe70a397e, 0x77a1d9ee, 0xe15daedd, 0x7375e190, 0x33f1c200, 0xaf9b90fe, 0xc0e898a5, 0x11456250]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x52926722b94ff470ecc98b8dc6e49b1ca7f47a8b7215aaa4d28d8c7a3b2f1e28, 3902050137));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x485ed65d74585cf707472d0a3e90c762f0920b748c201a92d96c544578be109);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0x2b320e15);
        assert_eq!(result.get_in(1).unwrap().unbox().get_utxo(), (0xbb9e50c7228405111786b3cea92ffaefa5fee3e25bd4503d256c173f3ba1a323, 1353526479));
        assert_eq!(result.get_in(1).unwrap().unbox().get_script_hash(), 0x52e38e93ececc741f30f2f8535aeb1cfb31d34f0e8c151cb3a18b05a390f55f);
        assert_eq!(result.get_in(1).unwrap().unbox().get_n_sequence(), 0x92e2b3bc);
        assert_eq!(result.get_in(2).unwrap().unbox().get_utxo(), (0xa299413df26fd3c5981a79b2cd98a26a732abcd8ef74db1587a41c5a63a640b4, 1341342837));
        assert_eq!(result.get_in(2).unwrap().unbox().get_script_hash(), 0x33071b6277bfbf089e9953e6030d6a122e100d97556eddd85a85f4fab095c85);
        assert_eq!(result.get_in(2).unwrap().unbox().get_n_sequence(), 0x8beeb847);
        assert_eq!(result.get_in(3).unwrap().unbox().get_utxo(), (0x3d83c2f682490c792d1b12a77f8ef81fc0cda667dc7898a4cf3b5b1eb099966d, 1970765233));
        assert_eq!(result.get_in(3).unwrap().unbox().get_script_hash(), 0x1b0272ed63302d0db7385257f467d5a06184eb76fd10d13a5fe8ecd7d2663e);
        assert_eq!(result.get_in(3).unwrap().unbox().get_n_sequence(), 0x37a3a2c9);
        assert_eq!(result.get_in(4).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 153139577825242);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x76480a9c5a7b27efb41fc1c1cf24f59d5721408fabf40a0ad8bb073144f8706);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 1306855770719894);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x6d6504aa6abd8fb81cb90ee51cc71dfae4f5555286829a560f671339146502d);
        assert_eq!(result.get_out(2).unwrap().unbox().get_value(), 1566484163198580);
        assert_eq!(result.get_out(2).unwrap().unbox().get_script_hash(), 0x121445fb38c275ea53d6370fd439f179489a51917e8e8aa8c8947058286b79f);
        assert_eq!(result.get_out(3).unwrap().unbox().get_value(), 73020592672843);
        assert_eq!(result.get_out(3).unwrap().unbox().get_script_hash(), 0x5eae724a1689b3557e85baf3854e571a5728f797b23ec7d09a9e28da0218f74);
        assert_eq!(result.get_out(4).is_none(), true);

        // Transaction ID: 84ac8f087c0840845b7fa3c13b669cdc5d60bd8f74afe47ad40a0aec018b5625
        let mut serialized_byte_array = array![0x6, 0xf742dd4e01120d4914da14638a1fa84779ca203b4a77adbc97b09da885a580, 0x1dac6e49ff37fa8608e2669e8fa530640295a4fff30276b61c9601df44ad7e, 0x5a2b5fb3410c33278d4ef10780c01632a3af892805f6fa8181809ed7eab522, 0xa568ff2bea88981400540c539a6548936ed005f6ff179d0c1ce838dfe35639, 0x9f56461cacbcd17bc4580920fbb83f7e97dd52a75cb6f0ce01481c03a9b554, 0x060022955088eac101712d1c271710d21e809d78dc3d90481465fb562797c0, 0x18c8a6df5ffe393d4d62, 0xa].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1323123447);
        assert_eq!(result.get_locktime(), 1649229113);
        assert_eq!(result.get_hash(), [0x25568b01, 0xec0a0ad4, 0x7ae4af74, 0x8fbd605d, 0xdc9c663b, 0xc1a37f5b, 0x8440087c, 0x088fac84]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x120d4914da14638a1fa84779ca203b4a77adbc97b09da885a5801dac6e49ff37, 3792209658));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x4dd0b886c0e66a732a48f72980f35f610fb8c4703aeedfcfa7f41ad0265f6b);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xcef0b65c);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 1781989061631048);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x46bedfa6c1afc1cd6edb75a9a055fc760488776b3c175c8f6ae802dc9c7ebe8);
        assert_eq!(result.get_out(1).is_none(), true);

        // Transaction ID: 733b221532061d5799d8748cdb008dcac337cf21430bd64d3978b6e234c614c4
        let mut serialized_byte_array = array![0x3e, 0x74d5084e05bbbb30cc50bc7225a44568b83263b2922d71d7bc97a74a6bce03, 0x7643b8acc8b9ef4d69bdfd1c0189841c5f962b6f8333fd91ee12c3d424e49a, 0x4bcc6e1914e991bac060ae1fdc66bb59ea7b5bc6afc753722cdcdd804c16e5, 0x7159dbfa5559400f3f2a86cacd75e92fe4f0862273f54582ed28b4383402ae, 0xa49d720e8ad0ddbead7c254a90a6c656cec477836d09eb252279a9b9bae735, 0x8d34e3f6aec0a8e495be526ab94946177608bff71ccd562d275ea29b393fda, 0x28044d7047bd2d365b1786e3259dc5f53dfd48d7ed9130ad74e14b888e3656, 0xe90bd54c8114b2457be90ff86eaf7f5280b4f63b36dde7ac965fe72b5538b9, 0xe11fbc5bf53ce69c1e63a5b859f23cfc1bd339cfe94fdf468d6467add21bc2, 0x8fd42938b748d2449b63c80606f60c3804d4bfdfa6cb48632e09ca2a27c7d1, 0x855e758c1cc70edf0b72b66a3936633f8d6a934b43a2abad1a964aca7a6382, 0xb6e97765a7722b4ad5b9d493b5fc22646eff0a1c87ff5f0a5f54a9294a9321, 0x8fa9a22da99be9bea24da9e452ebd77abcaf503b2dcb8758ddb5736aec7b77, 0x7694f431d45d2ff545dcdd98d808f0252a0d3af1f5f9b702c1ddeef90cc393, 0x7ad4516f8f373c1717ca99b5d4c2216afdf301f16199eca555e852a28a7462, 0xf9ff01aab419a8a642641233a6652b27bbc623e7797c9a1cb6654d88229427, 0x89921e1c77e25b673c08b0a961f08b4fe9ae8ac3196071a295aa609bc4a734, 0x033c6413236950ab2afb97c995acc2713fb20c915f739ffdff26887b301097, 0x8435c97d7ded0c8e817beb9129a24380b0aec48db260a7b1f43daac113cb11, 0x7b9c7b5940b92516cab6bbcf76f44d0ae8c9abc94a1a5131c4e2a9d157586b, 0xb0accded43c1ba81f54729056407b2c8716f0208d0fc28316366ff41197a44, 0xd6418eb2767c8d1762ef2e9c3f81482ecbcf84eb59bd7e92e8e50065eb0723, 0x199bff46c80d0244d6f87cf2255e18fe2eb81c3874759e66641581790ce7a9, 0x020008308b4e53e124c37efc0f0c72dc3527da06705c206c7c43f6c8d8f746, 0x3147e4717dc41a52ce590d30d49982fe1eb45e795d1799598426080b39b7c5, 0x928082c08cee9b765b96afa77f5ceb3b375e00af29aa20a93af3e64304c5e2, 0x00ed833b241b90aee0e0339d172fdccad45545e8a1fb701b5ba7bf8d334605, 0x29a39c25c8faaa3de9c3c862094fbebd2df721af6346b421370be742951610, 0x92bc9337212775e79281eb6eeea58645db792892c709e90eb5b2bf4cc73b6a, 0xa0e8438ef86bdb375bff40283fdd57544f52941e970b1ac3ed8167216293ba, 0x45f60bded2008e8d69f842e3c79b1413ae3d94091c43bc58f1340684b9f1c5, 0xedafeb6d64547fab88d722e9f946a423f422c14d9825f1c29988b208293b49, 0xfdc50164ff474237db887b6dadeb8e1fb1b03e13ad6bb4191da9f82ecd0e2d, 0xc70f165c086ad9bb5fad6217f4cf75fd052d2f8aa95d46c744ad2cfb53a03e, 0xb16e27d90a81c36fee275cca7eb7004f185fdca2515e8329411bfffedca24a, 0x64aadfddba93c6d1d1f0a355850402ab57a8857c74764292283c7945b821f6, 0x4a0372f29d3220fa948f9b5c58c87c4d66e881eb5f3a732176f74e4c2fa022, 0x78cf1e6486c40e01102a1adc841514f62979b8d63488294f2914ce90b53a4a, 0x1d60de5fabbe4a6a9a91f0c623c02144393c529bb937d7975af8c1aac80c71, 0x7ffde7df7a288af6e66005f19d9197554c06f0d3cfe00b5b5717f873631c1c, 0xbfc77167163a9adfd307e81396b00ad3b6dcc9b5aa362cc80a448a2d7179ac, 0x4fe198ca83869aaa878197436d23361635bf51725091b44131901088b25b2f, 0x4b69635f0994a50c686d9bb9a0be5ebb981126756d32f60e68e3eb3bf6fbe3, 0xf7531da6b527957440c38965549ebf6a0ae14e2fd389d9e021a9a8823f0d07, 0x7a543bfd0f685434b8deb59cb72dccf7cbd5c3f6e03b6ef08a7e56cafbd55d, 0x83fe64f1810dac3e95ac385fd9bbc4dd880a2ba9430cef8d97e18b4716e6d5, 0xdc74422191de41c6fccc1b07df0ebdc7ab3396d595c7d5e67ada6babb6df02, 0x2fe21e29187fc230f68d718b39e36841d59e8d100ca40224e084b60fc21d3f, 0xfd39012499218ab8b798996864cba423e5d0b1f628117f72239c2153c5f2b4, 0x24922cbb50c93fff1f4345dbf47dddbc32d0bccf5de42b2d0760f22676a94e, 0x327d12d5b85d9233f8c0a012985d46e51499dcb53d72f8b48da66f8f16a4dd, 0xf6cb85d2c01e2102ee233899f99a01773f883c6b7c3f4320809b6c67d219f9, 0xb75033f3ed920a24ce1c2862a24d33f1191752a1d296ecdda56d4b683d000e, 0x4f22ecdb1f543a9c96ceb4da9efb7eddfbfa4a5e08397699c806a8bb5c539a, 0xfe470c14d6f1d6b382f4dbf45d122a8dfd2b8b94b357defb3f9edbe6488f84, 0xdc68755850554570ebeb53bfef8979ccf398209de3d5b6ee5e9c3e3cd9e26e, 0x89c278b623b33a5e8e3c7678748ff21d88fcf92dc561c0476295edfb545011, 0xa7500fe7905c8c81683c5e130a746aa287788436e368a9d929e603d1e51083, 0x4822273e03520eacbdda021fe0e51b76e7050037597b3c7b0e73bd92e6e857, 0xb56bc5d0eba4d0887a3093f3a2236cc1f793b9b56ac7ba31866e50f724b518, 0xd5834c424aa6e01580ea4c249d9dce342b05f900003e15b2d7a722af34a6e8, 0xe946d4689cc7c17f6b4c2f3d6969d73c9a1755520d9d51cdec9105d89ef096, 0x00c4fb469886aab624bbe2a154de29043c498f64c052c3e24c31, 0x1a].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1309201780);
        assert_eq!(result.get_locktime(), 827122371);
        assert_eq!(result.get_hash(), [0xc414c634, 0xe2b67839, 0x4dd60b43, 0x21cf37c3, 0xca8d00db, 0x8c74d899, 0x571d0632, 0x15223b73]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0xbbbb30cc50bc7225a44568b83263b2922d71d7bc97a74a6bce037643b8acc8b9, 3177795055));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x15b2b11542414b6a30e1a88f470b77674cba63a4de2cbf3874ce7f1a77839e3);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xa2434b93);
        assert_eq!(result.get_in(1).unwrap().unbox().get_utxo(), (0xabad1a964aca7a6382b6e97765a7722b4ad5b9d493b5fc22646eff0a1c87ff5f, 2840878858));
        assert_eq!(result.get_in(1).unwrap().unbox().get_script_hash(), 0x24871d901937c1dd62fac200b062fc8ac36b3ca22bbb2b444dfd22f5ad48c43);
        assert_eq!(result.get_in(1).unwrap().unbox().get_n_sequence(), 0xdddc45f5);
        assert_eq!(result.get_in(2).unwrap().unbox().get_utxo(), (0x98d808f0252a0d3af1f5f9b702c1ddeef90cc3937ad4516f8f373c1717ca99b5, 1780597460));
        assert_eq!(result.get_in(2).unwrap().unbox().get_script_hash(), 0x53c84c101a32e2adc40cc527fc7811ece54caa0a23df737f098abbc7822d103);
        assert_eq!(result.get_in(2).unwrap().unbox().get_n_sequence(), 0x34f158bc);
        assert_eq!(result.get_in(3).unwrap().unbox().get_utxo(), (0x0684b9f1c5edafeb6d64547fab88d722e9f946a423f422c14d9825f1c29988b2, 1228613896));
        assert_eq!(result.get_in(3).unwrap().unbox().get_script_hash(), 0x54c9b847c9bc1246a35e51b5962167531b00dee40c1f7c67449218df1cec85d);
        assert_eq!(result.get_in(3).unwrap().unbox().get_n_sequence(), 0xda7ae6d5);
        assert_eq!(result.get_in(4).unwrap().unbox().get_utxo(), (0x6babb6df022fe21e29187fc230f68d718b39e36841d59e8d100ca40224e084b6, 1058914831));
        assert_eq!(result.get_in(4).unwrap().unbox().get_script_hash(), 0x64eebdf3a98d5e130d7d7d8fd2ae60270f88d57f8bbec968dd4b1b804b9a7b3);
        assert_eq!(result.get_in(4).unwrap().unbox().get_n_sequence(), 0xdabdac0e);
        assert_eq!(result.get_in(5).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 1661869343760415);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x666c48a4a03700e800cf95c9dbe0f2a16af4c65617c031012ae8f1e5b03a7b2);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 273800595033757);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x36c46ea6a2e5ea4bf1f4725551abcdb6348c9ee469c5f9227751443cf48d3ed);
        assert_eq!(result.get_out(2).is_none(), true);

        // Transaction ID: 14dd4d269c360c1dbc4bfb5d3860f696ebd1e6ef44931669708b82afb5caf668
        let mut serialized_byte_array = array![0x10, 0xe1aa6944023fbe67045840f628220e4d0c2627ad901ff453a408fa5c41394e, 0x946bbf86b664b388a6e5a81daba3526e95caa108ef6fa0e25bfd4794c390be, 0x96b81985f4d1a99d9f0fda1c251a57da92649aa0565a71733300982ffeeb9d, 0xbd5ef42ba0fc399aeff97e6d0adaccd98c19c0e2ceda181d2c4517cc50ac3e, 0xb1bc0db1e867305a9f72e66ed57eff182314904b2bb6d9f2233ffb083448fb, 0xba83d02197b25b33cc63dfa2011317d1fea461afe239d3824a04e0e69151c4, 0x2873b93a1a2059445c30f42559d797f7193de8917db4545f73f2cee8f39911, 0x6864d12043fe58995eec35e082cf3f0eb9746377e6db528eeb6dea0320d0ce, 0xcad45cb058f7b7e4a3d4c1fc806460abac8b19987c72cac02eb8b0311c7558, 0x70a04fd5d04c84cb689725d5f7f0cdd12b389e4fc6a52a318c92f549131380, 0xd40ae577d3d14fcb91d06d40a8e91a77e091eeed5f81b361655687de28e270, 0x58e60022fa8004f758af00af1b02001e639a8c0ca6ab5cee9d4c92ad7e30f5, 0xcaa89e67b4492768e29a76a167a06302ed32d6cda400002ff42c0ffad88300, 0x38468ad7c11b37550d10000ee8d691604f0675bf5fafece69b5512baa03db3, 0x324a06f7ed54b098bb1e7a89143ff502000cf3ddfc2516ba1f1693dc78f435, 0x4666f2a93407001529fbafe9f6d77a9e4ea21282559497c02b48e1eae023f3, 0xab48, 0x2].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1147775713);
        assert_eq!(result.get_locktime(), 1219228451);
        assert_eq!(result.get_hash(), [0x68f6cab5, 0xaf828b70, 0x69169344, 0xefe6d1eb, 0x96f66038, 0x5dfb4bbc, 0x1d0c369c, 0x264ddd14]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x3fbe67045840f628220e4d0c2627ad901ff453a408fa5c41394e946bbf86b664, 3852896435));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x2005df23bf43b99fe9cfe32961ecac7c1881ce22f9d6ac2a6d21bf0dcb244ac);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xe8cef273);
        assert_eq!(result.get_in(1).unwrap().unbox().get_utxo(), (0xf399116864d12043fe58995eec35e082cf3f0eb9746377e6db528eeb6dea0320, 3570061008));
        assert_eq!(result.get_in(1).unwrap().unbox().get_script_hash(), 0xde0539b4506ae466502b1e9000461e97b1aaaad30f0ba1bca15ef3d6f9d5d9);
        assert_eq!(result.get_in(1).unwrap().unbox().get_n_sequence(), 0x80fa2200);
        assert_eq!(result.get_in(2).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 593388398139639);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x1b2eafec321f55752ecd51e19ef5f91783ea8f1fe8ca76ebef05f814d12954d);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 181203968912642);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x506c5a369f7171fdc11d469886566e98249ca22a1b332f5e134d0b9ddc6fabe);
        assert_eq!(result.get_out(2).unwrap().unbox().get_value(), 832601229720094);
        assert_eq!(result.get_out(2).unwrap().unbox().get_script_hash(), 0x2801f829670b45f0d5e765e510058436b0fef769a6511fca9cf5571bff11385);
        assert_eq!(result.get_out(3).unwrap().unbox().get_value(), 2028229357880885);
        assert_eq!(result.get_out(3).unwrap().unbox().get_script_hash(), 0x71a3028dc34e6bacda8b575bb4976c6e42666e28a0a0c6a726818182eb4c521);
        assert_eq!(result.get_out(4).is_none(), true);

        // Transaction ID: 71ce3f97fb6f4bd73096d6a4f6ab8c83b7d3b3d9cb7eb8d31fb79bfce6c543da
        let mut serialized_byte_array = array![0xc, 0x9f1ff565013d94524f69571e1c7687419105be23bd14384085e929bf0462ae, 0xa4efd304cab12deb2049b44f86db8f2dd6a865eff1cd8d2a410823a8d80bc0, 0x5c220a79597478e9ebe2c403eaeb881d88ef8413f639671ffca83a1dc48d3d, 0x29b4c1ec0c9b44e0460d33a4ea71d0e23ad4f492e18711901875f59ce4b051, 0x695bdb9eafed08271b2e04fb826b5240e57a062876a61e38c7ff062ba79cb1, 0x674f5229b186f5aced5a0c59458950b4fd4378568229571c6261c95f2dbe60, 0x8439510e59720f1c2524402e3745e0a72c7f0ee0785024f7121cdb18c39f19, 0x5115b1aa9722cd07cc042e98c707c22407002535bbb7d11eeea7932ab55c92, 0x0d2ea964fa0374db6f4f55160a703c1178461e845f889e2b84a05d82c8a46b, 0x02001d8a31a9acb165971bff879929a1495b3709ffd001a6149e56a7a86857, 0xdd30805edb9fd505001cad7ed853450c70056742418e33f1d4c411662913d7, 0x9a9fc2c26e1baf34c76948cd42050012670057c501161ae439c174330ffdb8, 0xb2e31b060646a3, 0x7].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        let result = BitcoinTransactionImpl::from_byte_array(@byte_array);
        assert_eq!(result.get_version(), 1710563231);
        assert_eq!(result.get_locktime(), 2739275270);
        assert_eq!(result.get_hash(), [0xda43c5e6, 0xfc9bb71f, 0xd3b87ecb, 0xd9b3d3b7, 0x838cabf6, 0xa4d69630, 0xd74b6ffb, 0x973fce71]);
        assert_eq!(result.get_in(0).unwrap().unbox().get_utxo(), (0x3d94524f69571e1c7687419105be23bd14384085e929bf0462aea4efd304cab1, 1226894125));
        assert_eq!(result.get_in(0).unwrap().unbox().get_script_hash(), 0x3ec6aea14c565a2fb42e567c77a710bbdabf254c14e2305476102bd2af081b3);
        assert_eq!(result.get_in(0).unwrap().unbox().get_n_sequence(), 0xcc07cd22);
        assert_eq!(result.get_in(1).is_none(), true);
        assert_eq!(result.get_out(0).unwrap().unbox().get_value(), 2010740609751086);
        assert_eq!(result.get_out(0).unwrap().unbox().get_script_hash(), 0x470f807fc986a3168f5dc7105de086736ef7af36c3e37c567537cacc82f4283);
        assert_eq!(result.get_out(1).unwrap().unbox().get_value(), 681305436216736);
        assert_eq!(result.get_out(1).unwrap().unbox().get_script_hash(), 0x499f44a49b968afc7b7798a49869b6dbd7125a250151dc1cfea65a49228bfbf);
        assert_eq!(result.get_out(2).unwrap().unbox().get_value(), 1642257440473136);
        assert_eq!(result.get_out(2).unwrap().unbox().get_script_hash(), 0x90311bc1f32e6c38a9c8b0cfaad39f02d4575bd47689714240ae274a1b80b0);
        assert_eq!(result.get_out(3).unwrap().unbox().get_value(), 1480824334174004);
        assert_eq!(result.get_out(3).unwrap().unbox().get_script_hash(), 0x157dc6117811c14032a9caf8c29fe70c4860930708c4a970b15ce82dde7272f);
        assert_eq!(result.get_out(4).is_none(), true);
    }

    #[test]
    #[should_panic(expected: 'bitcointx: witness not stripped')]
    fn test_invalid_witness_not_stripped() {
        // Transaction ID: ce3a49a4bd21f09fd8bf04399434e0bc4b311f254ce2cdc1ae4a41cd80e05566
        let mut serialized_byte_array = array![0x13, 0x0100000000010323dbaf4cad232fca1bfdb75e34443314c4462f9bd3968e17, 0x119e452b2432eae3010000001716001496de4122da32c2d428e70b44f8d07f, 0x2b26334b6ff0ffffff23013203bac75f77e1879673eb099a6c071f5a17d016, 0xf806df6c88f2a63a76b2000000001716001496de4122da32c2d428e70b44f8, 0xd07f2b26334b6ff0ffffff25e42ea855e2493db548a762fb5c24a18abd8cc6, 0x0f9dfad4cddaf712a2d1b44f010000001716001496de4122da32c2d428e70b, 0x44f8d07f2b26334b6ff0ffffff02137c6f01000000001976a9147d07fc05b8, 0xda6db8e06b97922daa76d9026b195288ac0e3707000000000017a914424f29, 0xa8a84fa867814ff9ded43379c9dc9a6814870247304402202ab100ce04848e, 0x293de2cc2cac99554fcf2656b8461be64ab96e5922d8c66b060220793db90e, 0x557423c92748a3fc1670891ca06d0907a3cf7d8b3790f05176a7f1e1012102, 0x550e8b9eaa471d31c4a544a6aad1d8a3b6e4c4b127ddfdd629e85a888d3f8d, 0xd602473044022004ef97f07043a7b5b206966a1c68215a770e95da41fa431d, 0xf5e2a0d6229aad5602200e07703c9b383e00963b6ed9fee4bb9b302df8cb8c, 0x1a26d0f5e51d2f04ff4b1a012102550e8b9eaa471d31c4a544a6aad1d8a3b6, 0xe4c4b127ddfdd629e85a888d3f8dd60247304402207abb8b67ff69f355e5f2, 0x93ef6ec984c5293c91c689352c0d275c1624852fd19002206b0757f59850c9, 0x0954e95ac6fc970b6b95bafd2244633c602b89ec703aabd55d012102550e8b, 0x9eaa471d31c4a544a6aad1d8a3b6e4c4b127ddfdd629e85a888d3f8dd60000, 0x0000, 0x2].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        BitcoinTransactionImpl::from_byte_array(@byte_array);
    }

    #[test]
    #[should_panic(expected: 'bitcointx: more data')]
    fn test_invalid_data_extended() {
        // Transaction ID: 55ea46d824d26c9716eb6640e16136c940fe008a4a93282773d748433b4c8c46
        let mut serialized_byte_array = array![0x20, 0x06e8cb16035adee22388896511115133cb153f92fe591fcc0fdd1d385f80fc, 0x1db16d2b0165240c8cb39fc9ecf3161f22758d7071e2567cd5e8a11597c648, 0x44961d34f94184ccab9be75f9728d1524c7b15170fabad61a72142c94a727c, 0x732360809297affeb9ca50c98bd1a0359f8f83eb5949fd952d5e174ba3e2aa, 0x58216c3fb82cd95925d4d13e3e965c7d732a4fe144971163ac11a9a6d73040, 0xedf10f6c99d4e68024b73cb25d7525b1ea7672cbd16e5ef08a16f6945e56ef, 0xaddef905a8e4829a6e5ae1d02b802b380aeb23d8822cf13f97ce151fd2abb5, 0xaa9f5904161b3f30546c63726f4bc772f071a42c63b8ef5dfd130116951713, 0xb74f539e30f6e40a2b0302fce45f34d64b02569b0755b97d38f7d44a707b22, 0x1d1f14a4e7c4417cee4e2de64f350f730cc5484f4aea5d024fd373a81cb000, 0xc1ea2c4e6c29ce89df89c7a4c690bfbb23ad03bf020c1f4f03595aaf10babd, 0x47b61a4add58278e08a4a8bdd9d37a54d14bda833d81aa2cf71fcac6bfaf41, 0x8821a949c7c43b822824a3fb319392b9c511cf55e2bef62d2a6397b17b1a15, 0x118c3d831ead5c69208941b9764427cebb3d28716cdeeff46e2b375730e1a3, 0x04f18b3f8c72b060bfe848286515994c1a7f6f5bf4415968823d5e12c4b39c, 0x253f78f25024178bef6b2d1201b6e792660e8a3b6a4b10ba4a090a708b8df9, 0xc40b2f3468389a0c96ed701ba3da14c030d02dcd44616f8509cdd01bb7fc0c, 0xd8cfb65b5316b65a43a55800fa41bedfddac65a83355391c4eb288e769b5b1, 0xedfd3101e191e95a1f3bf31450776c3bd0946d63320c5e6b8e35032b96e71b, 0x07ca1eab788d4a2ceff4030b4bd084c1e5f86bde0531412f16d6489d00f70f, 0xf498f59c23f22dc3093d1c56db877f544ae3f36ec00cfbb76892580a4daa29, 0x2fbf4c9ce59c375305771241de22bcae09d9a33851836236feb25b8b054a09, 0x6ee3356a2317e62f5a1153a33e112c03d44bd5162923e783be6d646b59de7e, 0x44787326b61abc22c39fbb4cf7a3d81c483c0e0ed95bc81398d2626546ef9b, 0x1025d84b221f488471a1e9e57909fd9189733bdff38ad62575ef9275b2586e, 0xe5c2b5c76c42abbed1df5983df4d65315778433a42a4f09c5bfab41aa234c2, 0xc0e2a124731e6197c54a6e84cbbb8071a7102ebb23ed3bc735771d9147ddfe, 0x789edb9a9e971921fa2762f85a8a282d6d282fae5c98a417077176ca1f762e, 0x3d0bf3036f27354127a6060018da26ff94e6d5bfcd7d9e4e9b824d1ea8d206, 0xe593034d2953801a4f40c87e04002a6f9e40cd14f09a47851fa458e53dd070, 0x8b248e10137351c20edc01e0b2aee3c18f23cb8699061d045b5bb0038bff27, 0x8906000c8515bde0b18430d2b6e2ae833cf485fa8f695b7ae86bfcd8e17529, 0x0614199254df1646751a9ddbbb3e6a2963c3ace271857f3624b57cc8c482, 0x1e].span();
        let byte_array = Serde::<ByteArray>::deserialize(ref serialized_byte_array).unwrap();
        BitcoinTransactionImpl::from_byte_array(@byte_array);
    }

}